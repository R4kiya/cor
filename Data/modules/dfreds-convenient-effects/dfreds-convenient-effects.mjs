var __defProp2=Object.defineProperty;var __name2=(target,value)=>__defProp2(target,"name",{value,configurable:!0});var __defProp=Object.defineProperty,__name=__name2((target,value)=>__defProp(target,"name",{value,configurable:!0}),"__name");const id="dfreds-convenient-effects",title="DFreds Convenient Effects",description="Adds easy to use toggleable active effects for common use cases",version="7.0.0",compatibility={minimum:12,verified:"12.331",maximum:12},esmodules=["dfreds-convenient-effects.mjs"],scripts=[],styles=["styles/dfreds-convenient-effects.css"],packs=[],packFolders=[],relationships={systems:[],requires:[{id:"socketlib",type:"module"},{id:"lib-dfreds-ui-extender",type:"module"}]},languages=[{lang:"en",name:"English",path:"lang/en.json"},{lang:"cn",name:"\u4E2D\u6587",path:"lang/cn.json"},{lang:"fr",name:"Fran\xE7ais",path:"lang/fr.json"},{lang:"pt-BR",name:"Portugu\xEAs (Brasil)",path:"lang/pt-BR.json"}],authors=[{name:"DFreds",url:"https://github.com/DFreds",discord:"DFreds#1238"}],socket=!0,url="https://github.com/DFreds/dfreds-convenient-effects",manifest="https://github.com/DFreds/dfreds-convenient-effects/releases/latest/download/module.json",download="https://github.com/DFreds/dfreds-convenient-effects/releases/download/v1.2.1/dfreds-convenient-effects.zip",license="https://github.com/DFreds/dfreds-convenient-effects/blob/main/LICENSE",readme="https://github.com/DFreds/dfreds-convenient-effects/blob/main/README.md",bugs="https://github.com/DFreds/dfreds-convenient-effects/issues",changelog="https://github.com/DFreds/dfreds-convenient-effects/releases",library=!1,media=[],moduleData={id,title,description,version,compatibility,esmodules,scripts,styles,packs,packFolders,relationships,languages,authors,socket,url,manifest,download,license,readme,bugs,changelog,library,media},MODULE_ID=moduleData.id,COLORS={COLD_FIRE:"#389888",FIRE:"#f98026",WHITE:"#ffffff"},MODULE_IDS={ATE:"ATL",MIDI:"midi-qol",TOKEN_MAGIC:"tokenmagic",STATUS_EFFECTS:"dfreds-status-effects"},SECONDS={IN_ONE_ROUND_DND5E:6,IN_ONE_MINUTE:60,IN_TEN_MINUTES:600,IN_ONE_HOUR:3600,IN_SIX_HOURS:21600,IN_EIGHT_HOURS:28800,IN_ONE_DAY:86400,IN_ONE_WEEK:604800},SIZES_ORDERED=["tiny","sm","med","lg","huge","grg"];class Flags{static{__name2(this,"Flags")}static{__name(this,"Flags")}static#KEYS={CE_EFFECT_ID:"ceEffectId",IS_BACKUP:"isBackup",IS_CONVENIENT:"isConvenient",IS_TEMPORARY:"isTemporary",IS_DYNAMIC:"isDynamic",IS_VIEWABLE:"isViewable",NESTED_EFFECT_IDS:"nestedEffectIds",SUB_EFFECT_IDS:"subEffectIds",OTHER_EFFECT_IDS:"otherEffectIds",FOLDER_COLOR:"folderColor"};static getCeEffectId(effect){return effect instanceof ActiveEffect?effect.getFlag(MODULE_ID,this.#KEYS.CE_EFFECT_ID):foundry.utils.getProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.CE_EFFECT_ID}`)}static setCeEffectId(effect,ceEffectId){return foundry.utils.setProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.CE_EFFECT_ID}`,ceEffectId)}static isBackup(document2){return document2 instanceof ActiveEffect||document2 instanceof Item?document2.getFlag(MODULE_ID,this.#KEYS.IS_BACKUP)??!1:foundry.utils.getProperty(document2,`flags.${MODULE_ID}.${this.#KEYS.IS_BACKUP}`)}static async setIsBackup(document2,value){return document2 instanceof ActiveEffect||document2 instanceof Item?document2.setFlag(MODULE_ID,this.#KEYS.IS_BACKUP,value):foundry.utils.setProperty(document2,`flags.${MODULE_ID}.${this.#KEYS.IS_BACKUP}`,value)}static getFolderColor(item){return item.getFlag(MODULE_ID,this.#KEYS.FOLDER_COLOR)??""}static async setFolderColor(item,color){if(item instanceof Item)return item.setFlag(MODULE_ID,this.#KEYS.FOLDER_COLOR,color);if(item instanceof Object)return foundry.utils.setProperty(item,`flags.${MODULE_ID}.${this.#KEYS.FOLDER_COLOR}`,color)}static getNestedEffectIds(effect){return effect instanceof ActiveEffect?effect.getFlag(MODULE_ID,this.#KEYS.NESTED_EFFECT_IDS):foundry.utils.getProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.NESTED_EFFECT_IDS}`)}static async setNestedEffectIds(effect,nestedEffectIds){return effect instanceof ActiveEffect?effect.setFlag(MODULE_ID,this.#KEYS.NESTED_EFFECT_IDS,nestedEffectIds):foundry.utils.setProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.NESTED_EFFECT_IDS}`,nestedEffectIds)}static getSubEffectIds(effect){return effect instanceof ActiveEffect?effect.getFlag(MODULE_ID,this.#KEYS.SUB_EFFECT_IDS):foundry.utils.getProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.SUB_EFFECT_IDS}`)}static async setSubEffectIds(effect,subEffectIds){return effect instanceof ActiveEffect?effect.setFlag(MODULE_ID,this.#KEYS.SUB_EFFECT_IDS,subEffectIds):foundry.utils.setProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.SUB_EFFECT_IDS}`,subEffectIds)}static getOtherEffectIds(effect){return effect instanceof ActiveEffect?effect.getFlag(MODULE_ID,this.#KEYS.OTHER_EFFECT_IDS):foundry.utils.getProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.OTHER_EFFECT_IDS}`)}static async setOtherEffectIds(effect,otherEffects){return effect instanceof ActiveEffect?effect.setFlag(MODULE_ID,this.#KEYS.OTHER_EFFECT_IDS,otherEffects):foundry.utils.setProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.OTHER_EFFECT_IDS}`,otherEffects)}static isConvenient(document2){return document2 instanceof ActiveEffect||document2 instanceof Item?document2.getFlag(MODULE_ID,this.#KEYS.IS_CONVENIENT)??!1:foundry.utils.getProperty(document2,`flags.${MODULE_ID}.${this.#KEYS.IS_CONVENIENT}`)??!1}static setIsConvenient(document2,value){return foundry.utils.setProperty(document2,`flags.${MODULE_ID}.${this.#KEYS.IS_CONVENIENT}`,value)}static isTemporary(effect){return effect.getFlag(MODULE_ID,this.#KEYS.IS_TEMPORARY)??!1}static setIsTemporary(effect,value){return foundry.utils.setProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.IS_TEMPORARY}`,value)}static isDynamic(effect){return effect instanceof ActiveEffect?effect.getFlag(MODULE_ID,this.#KEYS.IS_DYNAMIC)??!1:foundry.utils.getProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.IS_DYNAMIC}`)??!1}static setIsDynamic(effect,value){return foundry.utils.setProperty(effect,`flags.${MODULE_ID}.${this.#KEYS.IS_DYNAMIC}`,value)}static isViewable(document2){return document2.getFlag(MODULE_ID,this.#KEYS.IS_VIEWABLE)??!1}static async setIsViewable(document2,value){return document2 instanceof ActiveEffect||document2 instanceof Item?document2.setFlag(MODULE_ID,this.#KEYS.IS_VIEWABLE,value):foundry.utils.setProperty(document2,`flags.${MODULE_ID}.${this.#KEYS.IS_VIEWABLE}`,value)}}function notEmpty(value){return value!=null}__name2(notEmpty,"notEmpty"),__name(notEmpty,"notEmpty");function findModuleById(moduleId){return game.modules.get(moduleId)}__name2(findModuleById,"findModuleById"),__name(findModuleById,"findModuleById");async function findDocumentByUuid(uuid){const document2=await fromUuid(uuid);if(document2){if(document2 instanceof TokenDocument)return document2.actor??void 0;if(document2 instanceof Actor||document2 instanceof Item)return document2}}__name2(findDocumentByUuid,"findDocumentByUuid"),__name(findDocumentByUuid,"findDocumentByUuid");function findDocumentByUuidSync(uuid){const document2=fromUuidSync(uuid);if(document2){if(document2 instanceof TokenDocument)return document2.actor??void 0;if(document2 instanceof Actor||document2 instanceof Item)return document2}}__name2(findDocumentByUuidSync,"findDocumentByUuidSync"),__name(findDocumentByUuidSync,"findDocumentByUuidSync");function findFolders({backup}){return game.items.filter(folder=>Flags.isConvenient(folder)&&backup===Flags.isBackup(folder)).sort((folderA,folderB)=>{const nameA=folderA.name.toUpperCase(),nameB=folderB.name.toUpperCase();return nameA<nameB?-1:nameA>nameB?1:0})}__name2(findFolders,"findFolders"),__name(findFolders,"findFolders");function findFolder(folderId,{backup}){return game.items.find(folder=>folder.id===folderId&&Flags.isConvenient(folder)&&backup===Flags.isBackup(folder))}__name2(findFolder,"findFolder"),__name(findFolder,"findFolder");function findAllEffects({backup}){return findFolders({backup}).flatMap(folder=>findEffectsByFolder(folder.id,{backup})).sort((effectA,effectB)=>{const nameA=effectA.name.toUpperCase(),nameB=effectB.name.toUpperCase();return nameA<nameB?-1:nameA>nameB?1:0})}__name2(findAllEffects,"findAllEffects"),__name(findAllEffects,"findAllEffects");function findEffectsByFolder(folderId,{backup}){const folder=findFolder(folderId,{backup});return folder?folder.effects.map(effect=>effect).filter(effect=>Flags.isConvenient(effect)&&backup===Flags.isBackup(effect)).sort((effectA,effectB)=>{const nameA=effectA.name.toUpperCase(),nameB=effectB.name.toUpperCase();return nameA<nameB?-1:nameA>nameB?1:0}):[]}__name2(findEffectsByFolder,"findEffectsByFolder"),__name(findEffectsByFolder,"findEffectsByFolder");function findAllNestedEffectIds({backup}){let nestedEffectIds=findAllEffects({backup}).flatMap(effect=>Flags.getNestedEffectIds(effect)).filter(notEmpty);return nestedEffectIds=[...new Set(nestedEffectIds)],nestedEffectIds}__name2(findAllNestedEffectIds,"findAllNestedEffectIds"),__name(findAllNestedEffectIds,"findAllNestedEffectIds");async function findEffectByUuid(uuid){const document2=await fromUuid(uuid);if(document2 instanceof ActiveEffect)return document2}__name2(findEffectByUuid,"findEffectByUuid"),__name(findEffectByUuid,"findEffectByUuid");function findEffectByCeId(ceId){return findAllEffects({backup:!1}).find(effect=>Flags.getCeEffectId(effect)===ceId)}__name2(findEffectByCeId,"findEffectByCeId"),__name(findEffectByCeId,"findEffectByCeId");function removeConvenientItemsFromSidebar(directory){const nonBackupFolders=findFolders({backup:!1}).map(folder=>folder.id),backupFolderIds=findFolders({backup:!0}).map(folder=>folder.id),folderIds=[...nonBackupFolders,...backupFolderIds];if(!folderIds)return;const html=directory.element;folderIds.forEach(convenientItemId=>{html.find(`li[data-document-id="${convenientItemId}"]`).remove()})}__name2(removeConvenientItemsFromSidebar,"removeConvenientItemsFromSidebar"),__name(removeConvenientItemsFromSidebar,"removeConvenientItemsFromSidebar");const ChangeSidebarTab={listen(){Hooks.on("changeSidebarTab",directory=>{directory instanceof ItemDirectory&&removeConvenientItemsFromSidebar(directory)})}};class Settings{static{__name2(this,"Settings")}static{__name(this,"Settings")}#USER_ROLES={};#APP_CONTROLS_PERMISSION="appControlsPermission";#CREATE_FOLDERS_PERMISSION="createFoldersPermission";#EXPANDED_FOLDERS="expandedFolders";#SHOW_HIDDEN_EFFECTS="showHiddenEffects";#SHOW_NESTED_EFFECTS="showNestedEffects";#HAS_INITIALIZED="hasInitialized";#RAN_MIGRATIONS="ranMigrations";#PRIORITIZE_TARGETS="prioritizeTargets";constructor(){this.#USER_ROLES[CONST.USER_ROLES.PLAYER]=game.i18n.localize("ConvenientEffects.SettingPlayer"),this.#USER_ROLES[CONST.USER_ROLES.TRUSTED]=game.i18n.localize("ConvenientEffects.SettingTrustedPlayer"),this.#USER_ROLES[CONST.USER_ROLES.ASSISTANT]=game.i18n.localize("ConvenientEffects.SettingAssistantGM"),this.#USER_ROLES[CONST.USER_ROLES.GAMEMASTER]=game.i18n.localize("ConvenientEffects.SettingGameMaster"),this.#USER_ROLES[5]=game.i18n.localize("ConvenientEffects.SettingNone")}register(){this.#registerConfigSettings(),this.#registerNonConfigSettings()}#registerConfigSettings(){this.#registerAppControlsPermission(),this.#registerCreateFoldersPermission()}#registerNonConfigSettings(){this.#registerExpandedFolders(),this.#registerShowHiddenEffects(),this.#registerShowNestedEffects(),this.#registerPrioritizeTargets(),this.#registerHasInitialized(),this.#registerRanMigrations()}#registerAppControlsPermission(){game.settings.register(MODULE_ID,this.#APP_CONTROLS_PERMISSION,{name:"ConvenientEffects.SettingAppControlsPermissionName",hint:"ConvenientEffects.SettingAppControlsPermissionHint",scope:"world",config:!0,default:CONST.USER_ROLES.GAMEMASTER,choices:this.#USER_ROLES,type:String,requiresReload:!0})}#registerCreateFoldersPermission(){game.settings.register(MODULE_ID,this.#CREATE_FOLDERS_PERMISSION,{name:"ConvenientEffects.SettingCreateFoldersPermissionName",hint:"ConvenientEffects.SettingCreateFoldersPermissionHint",scope:"world",config:!0,default:CONST.USER_ROLES.GAMEMASTER,choices:this.#USER_ROLES,type:String,requiresReload:!1})}#registerExpandedFolders(){game.settings.register(MODULE_ID,this.#EXPANDED_FOLDERS,{name:"Expanded Folders",scope:"client",config:!1,default:[],type:Array})}#registerShowHiddenEffects(){game.settings.register(MODULE_ID,this.#SHOW_HIDDEN_EFFECTS,{name:"Show Hidden Effects",scope:"client",config:!1,default:!1,type:Boolean})}#registerShowNestedEffects(){game.settings.register(MODULE_ID,this.#SHOW_NESTED_EFFECTS,{name:"Show Nested Effects",scope:"client",config:!1,default:!1,type:Boolean})}#registerPrioritizeTargets(){game.settings.register(MODULE_ID,this.#PRIORITIZE_TARGETS,{name:"Prioritize Targets",scope:"client",config:!1,default:!1,type:Boolean})}#registerHasInitialized(){game.settings.register(MODULE_ID,this.#HAS_INITIALIZED,{name:"Has Initialized",scope:"world",config:!1,default:!1,type:Boolean})}#registerRanMigrations(){game.settings.register(MODULE_ID,this.#RAN_MIGRATIONS,{name:"Ran Migrations",scope:"world",config:!1,default:[],type:Array})}get appControlsPermission(){return game.settings.get(MODULE_ID,this.#APP_CONTROLS_PERMISSION)}get createFoldersPermission(){return game.settings.get(MODULE_ID,this.#CREATE_FOLDERS_PERMISSION)}get expandedFolders(){return game.settings.get(MODULE_ID,this.#EXPANDED_FOLDERS)}async addExpandedFolder(id2){let expandedFolderArray=this.expandedFolders;return expandedFolderArray.push(id2),expandedFolderArray=[...new Set(expandedFolderArray)],game.settings.set(MODULE_ID,this.#EXPANDED_FOLDERS,expandedFolderArray)}async removeExpandedFolder(id2){const expandedFolderArray=this.expandedFolders.filter(expandedFolder=>expandedFolder!==id2);return game.settings.set(MODULE_ID,this.#EXPANDED_FOLDERS,expandedFolderArray)}async clearExpandedFolders(){return game.settings.set(MODULE_ID,this.#EXPANDED_FOLDERS,[])}isFolderExpanded(id2){return this.expandedFolders.includes(id2)}get showHiddenEffects(){return game.settings.get(MODULE_ID,this.#SHOW_HIDDEN_EFFECTS)}async setShowHiddenEffects(value){return game.settings.set(MODULE_ID,this.#SHOW_HIDDEN_EFFECTS,value)}get showNestedEffects(){return game.settings.get(MODULE_ID,this.#SHOW_NESTED_EFFECTS)}async setShowNestedEffects(value){return game.settings.set(MODULE_ID,this.#SHOW_NESTED_EFFECTS,value)}get prioritizeTargets(){return game.settings.get(MODULE_ID,this.#PRIORITIZE_TARGETS)}async setPrioritizeTargets(value){return game.settings.set(MODULE_ID,this.#PRIORITIZE_TARGETS,value)}get hasInitialized(){return game.settings.get(MODULE_ID,this.#HAS_INITIALIZED)}async setHasInitialized(value){return game.settings.set(MODULE_ID,this.#HAS_INITIALIZED,value)}get ranMigrations(){return game.settings.get(MODULE_ID,this.#RAN_MIGRATIONS)}async addRanMigration(migrationKey){let ranMigrations=this.ranMigrations;return ranMigrations.push(migrationKey),ranMigrations=[...new Set(ranMigrations)],game.settings.set(MODULE_ID,this.#RAN_MIGRATIONS,ranMigrations)}async clearRanMigrations(){return game.settings.set(MODULE_ID,this.#RAN_MIGRATIONS,[])}}function createConvenientItem({item,isBackup=!1,isViewable=!0}){return Flags.setIsConvenient(item,!0),Flags.setIsBackup(item,isBackup),Flags.setIsViewable(item,isViewable),item.name=isBackup?`${item.name} - Backup`:item.name,item.img=item.img??"modules/dfreds-convenient-effects/images/magic-palm.svg",item}__name2(createConvenientItem,"createConvenientItem"),__name(createConvenientItem,"createConvenientItem");function createConvenientEffect({effect,isBackup=!1,isTemporary=!0,isViewable=!0,isDynamic=!1,nestedEffectIds,subEffectIds,otherEffectIds}){return Flags.setCeEffectId(effect,createCeEffectId(effect.name)),Flags.setIsConvenient(effect,!0),Flags.setIsBackup(effect,isBackup),Flags.setIsTemporary(effect,isTemporary),Flags.setIsViewable(effect,isViewable),Flags.setIsDynamic(effect,isDynamic),nestedEffectIds&&Flags.setNestedEffectIds(effect,nestedEffectIds),subEffectIds&&Flags.setSubEffectIds(effect,subEffectIds),otherEffectIds&&Flags.setOtherEffectIds(effect,otherEffectIds),effect.description=effect.description?effect.description.includes("<p>")?effect.description:`<p>${effect.description}</p>`:"<p></p>",effect}__name2(createConvenientEffect,"createConvenientEffect"),__name(createConvenientEffect,"createConvenientEffect");function createCeEffectId(effectName){return`ce-${effectName?.slugify()}`}__name2(createCeEffectId,"createCeEffectId"),__name(createCeEffectId,"createCeEffectId");function getActorUuids(isPrioritizeTargets){return isPrioritizeTargets&&game.user.targets.size!==0?Array.from(game.user.targets).map(target=>target.actor.uuid):canvas.tokens.controlled.length!==0?canvas.tokens.controlled.map(token=>token.actor.uuid):game.user.targets.size!==0?Array.from(game.user.targets).map(token=>token.actor.uuid):game.user.character?[game.user.character.uuid]:[]}__name2(getActorUuids,"getActorUuids"),__name(getActorUuids,"getActorUuids");function getBaseType(){return Object.keys(CONFIG.Item.typeLabels)[0]??""}__name2(getBaseType,"getBaseType"),__name(getBaseType,"getBaseType");function log(data){console.log(typeof data=="string"?`${MODULE_ID} | ${data}`:data)}__name2(log,"log"),__name(log,"log");function error(message){console.error(`${MODULE_ID} | ${message}`)}__name2(error,"error"),__name(error,"error");async function getInputFromDialog({folder}){const color=folder?.id?Flags.getFolderColor(folder):"",content=await renderTemplate("modules/dfreds-convenient-effects/templates/create-edit-folder-dialog.hbs",{name:folder?.id?folder.name:"",color,newName:"Folder"});return new Promise((resolve,_reject)=>{getFolderDialog({resolve,folder,content}).render(!0)})}__name2(getInputFromDialog,"getInputFromDialog"),__name(getInputFromDialog,"getInputFromDialog");function getFolderDialog({resolve,folder,content}){return new Dialog({title:folder?.id?`${game.i18n.localize("FOLDER.Update")}: ${folder.name}`:game.i18n.localize("FOLDER.Create"),content,close:__name(_html=>{resolve({operation:"close",data:{name:"",color:""}})},"close"),default:"ok",buttons:{ok:{label:game.i18n.localize(folder?.id?"FOLDER.Update":"FOLDER.Create"),icon:'<i class="fas fa-check"></i>',callback:__name(html=>{const folderName=html.find("input[name=name]").val(),color=html.find("color-picker").val();resolve({data:{name:folderName||"Folder",color},operation:folder?.id?"update":"create"})},"callback")}}},{width:360})}__name2(getFolderDialog,"getFolderDialog"),__name(getFolderDialog,"getFolderDialog");class BackupConvenientEffectsController{static{__name2(this,"BackupConvenientEffectsController")}static{__name(this,"BackupConvenientEffectsController")}#viewMvc;constructor({viewMvc}){this.#viewMvc=viewMvc}getData(){return{folderData:findFolders({backup:!0}).map(folder=>{const viewableEffects=findEffectsByFolder(folder.id,{backup:!0});return{folder,effects:viewableEffects}})}}isUserGm(_target){return game.user.isGM}async onToggleFolder(event){const folderId=this.#findClosestFolderIdByEvent(event);folderId&&(this.#viewMvc.isFolderCollapsed(folderId)?this.#viewMvc.expandFolder(folderId):this.#viewMvc.collapseFolder(folderId))}onExportFolder(target){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return;findFolder(folderId,{backup:!0})?.exportToJSON()}async onSearchTextChange(_event,query,rgx,html){const isSearch=!!query;let matchingItems={};if(isSearch&&(matchingItems=await this.#findMatchingItems(rgx)),!html)return;const directoryItems=html.querySelectorAll(".directory-item");for(const dirItem of directoryItems){const $directoryItem=$(dirItem),isDocument=$directoryItem.hasClass("document"),isFolder=$directoryItem.hasClass("folder");if(isDocument){const match=isSearch&&matchingItems.effectIds?.has($directoryItem.data("document-id"));$directoryItem.css("display",!isSearch||match?"flex":"none")}else if(isFolder){const match=isSearch&&matchingItems.folderIds?.has($directoryItem.data("folder-id"));$directoryItem.css("display",!isSearch||match?"flex":"none"),match?$directoryItem.removeClass("collapsed"):dirItem.classList.toggle("collapsed",!match)}}}onEffectDragStart(event){const folderId=this.#findClosestFolderIdByEvent(event),effectId=this.#findClosestCeEffectIdByEvent(event);if(!folderId||!effectId)return;const effect=game.dfreds.effectInterface.findEffect({folderId,effectId,backup:!0});if(!effect)return;const dragData=effect.toDragData();event.dataTransfer?.setData("text/plain",JSON.stringify(dragData))}async onCollapseAll(_event){this.#viewMvc.collapseAllFolders()}async onResetSystemEffects(_event){return Dialog.confirm({title:game.i18n.localize("ConvenientEffects.ResetSystemEffects"),content:`<h4>${game.i18n.localize("AreYouSure")}</h4><p>${game.i18n.localize("ConvenientEffects.ResetSystemEffectsWarning")}</p>`,yes:__name(()=>{game.dfreds.effectInterface.resetSystemInitialization()},"yes"),defaultYes:!1})}#findClosestCeEffectIdByEvent(event){if(event.target)return $(event.target).closest("[data-ce-effect-id], .convenient-effect").data("ce-effect-id")}#findClosestFolderIdByElement(element){return element.closest("[data-folder-id], .convenient-folder").data("folder-id")}#findClosestFolderIdByEvent(event){if(event.target)return $(event.target).closest("[data-folder-id], .convenient-folder").data("folder-id")}async#findMatchingItems(rgx){const effectIds=new Set,folderIds=new Set,viewData=this.getData();for(const data of viewData.folderData)for(const effect of data.effects)rgx.test(SearchFilter.cleanQuery(effect.name))&&(effectIds.add(effect.id),folderIds.add(data.folder.id));return{effectIds,folderIds}}}class BackupConvenientEffectsApp extends Application{static{__name2(this,"BackupConvenientEffectsApp")}static{__name(this,"BackupConvenientEffectsApp")}#controller;#rootView;constructor(){super(),this.#controller=new BackupConvenientEffectsController({viewMvc:this}),this.#rootView=$("<div>")}static get#width(){return Object.values(ui.windows).find(app=>app instanceof ConvenientEffectsApp)?.position?.width??300}static get#height(){return Object.values(ui.windows).find(app=>app instanceof ConvenientEffectsApp)?.position?.height??600}static get#fromTop(){return Object.values(ui.windows).find(app=>app instanceof ConvenientEffectsApp)?.position?.top??75}static get#fromLeft(){const ceLeft=Object.values(ui.windows).find(app=>app instanceof ConvenientEffectsApp)?.position?.left??125,ceWidth=this.#width;return ceLeft+ceWidth+16}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{width:this.#width,height:this.#height,top:this.#fromTop,left:this.#fromLeft,popOut:!0,minimizable:!0,resizable:!0,id:"backup-convenient-effects",classes:["sidebar-popout"],scrollY:["ol.directory-list"],dragDrop:[{dragSelector:".convenient-effect",dropSelector:".convenient-folder"}],filters:[{inputSelector:'input[name="search"]',contentSelector:".directory-list"}],title:"ConvenientEffects.BackupAppName",template:"modules/dfreds-convenient-effects/templates/backup-convenient-effects-app.hbs"})}getData(_options){return this.#controller.getData()}activateListeners(html){this.#rootView=html,this.#initClickListeners(),this.#initContextMenus();const dh=this.#onDragHighlight.bind(this);html.find(".folder").on("dragenter",dh).on("dragleave",dh)}#onDragHighlight(event){const li=event.currentTarget;if(li.classList.contains("folder")){if(event.stopPropagation(),event.type==="dragenter")for(const t of li.closest(".directory-list").querySelectorAll(".droptarget"))t.classList.remove("droptarget");event.type==="dragleave"&&document.elementFromPoint(event.clientX,event.clientY).closest(".folder")===li||li.classList.toggle("droptarget",event.type==="dragenter")}}async _onSearchFilter(event,query,rgx,html){return this.#controller.onSearchTextChange(event,query,rgx,html)}_onDragStart(event){this.#controller.onEffectDragStart(event)}isFolderCollapsed(folderId){return this.#findFolderById(folderId).hasClass("collapsed")}collapseFolder(folderId){this.#findFolderById(folderId).addClass("collapsed")}expandFolder(folderId){this.#findFolderById(folderId).removeClass("collapsed")}collapseAllFolders(){this.#allDirectories.addClass("collapsed")}isShowHiddenEffectsActive(){return this.#showHiddenEffectsButton.hasClass("active")}removeActiveShowHiddenEffects(){this.#showHiddenEffectsButton.removeClass("active")}addActiveShowHiddenEffects(){this.#showHiddenEffectsButton.addClass("active")}isShowNestedEffectsActive(){return this.#showNestedEffectsButton.hasClass("active")}removeActiveShowNestedEffects(){this.#showNestedEffectsButton.removeClass("active")}addActiveShowNestedEffects(){this.#showNestedEffectsButton.addClass("active")}isPrioritizeTargetsActive(){return this.#prioritizeTargetsButton.hasClass("active")}removeActivePrioritizeTargets(){this.#prioritizeTargetsButton.removeClass("active")}addActivePrioritizeTargets(){this.#prioritizeTargetsButton.addClass("active")}#initClickListeners(){this.#collapseAllButton.on("click",this.#controller.onCollapseAll.bind(this.#controller)),this.#resetSystemEffects.on("click",this.#controller.onResetSystemEffects.bind(this.#controller)),this.#folderHeaders.on("click",this.#controller.onToggleFolder.bind(this.#controller))}#initContextMenus(){ContextMenu.create(this,this.#rootView,".convenient-folder .folder-header",[{name:"SIDEBAR.Export",icon:'<i class="fas fa-file-export fa-fw"></i>',condition:this.#controller.isUserGm.bind(this.#controller),callback:this.#controller.onExportFolder.bind(this.#controller)}])}#findFolderById(folderId){return this.#rootView.find(`.convenient-folder[data-folder-id="${folderId}"]`)}get#allDirectories(){return this.#rootView.find(".convenient-folder")}get#collapseAllButton(){return this.#rootView.find(".collapse-all")}get#resetSystemEffects(){return this.#rootView.find(".reset-system-effects")}get#folderHeaders(){return this.#rootView.find(".directory-list .folder-header")}get#showHiddenEffectsButton(){return this.#rootView.find(".show-hidden-effects")}get#showNestedEffectsButton(){return this.#rootView.find(".show-nested-effects")}get#prioritizeTargetsButton(){return this.#rootView.find(".prioritize-targets")}}class ConvenientEffectsController{static{__name2(this,"ConvenientEffectsController")}static{__name(this,"ConvenientEffectsController")}#viewMvc;#settings;constructor({viewMvc}){this.#viewMvc=viewMvc,this.#settings=new Settings}getData(){const folders=findFolders({backup:!1}),nestedEffectIds=findAllNestedEffectIds({backup:!1});return{folderData:folders.filter(folder=>{const isViewable=Flags.isViewable(folder)??!0;return this.#settings.showHiddenEffects||isViewable}).map(folder=>{const viewableEffects=findEffectsByFolder(folder.id,{backup:!1}).filter(effect=>{const ceEffectId=Flags.getCeEffectId(effect);if(!ceEffectId)return!1;const isViewable=Flags.isViewable(effect)??!0,isNestedEffect=nestedEffectIds.includes(ceEffectId),showHiddenEffects=this.#settings.showHiddenEffects,showNestedEffects=this.#settings.showNestedEffects;return showHiddenEffects&&showNestedEffects?!0:showHiddenEffects&&!showNestedEffects?!isNestedEffect:!showHiddenEffects&&showNestedEffects?isViewable:!showHiddenEffects&&!showNestedEffects?isViewable&&!isNestedEffect:!1});return{folder,effects:viewableEffects}})}}isUserFolderOwner(target){const folderId=this.#findClosestFolderIdByElement(target);return folderId?findFolder(folderId,{backup:!1})?.isOwner??!1:!1}isFolderViewable(target){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return!1;const folder=findFolder(folderId,{backup:!1});return folder?Flags.isViewable(folder):!1}async setFolderViewable(target,value){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return;const folder=findFolder(folderId,{backup:!1});folder&&await Flags.setIsViewable(folder,value)}isEffectViewable(target){const folderId=this.#findClosestFolderIdByElement(target),effectId=this.#findClosestCeEffectIdByElement(target);if(!folderId||!effectId)return!1;const effect=game.dfreds.effectInterface.findEffect({folderId,effectId});return effect?Flags.isViewable(effect):!1}async setEffectViewable(target,value){const folderId=this.#findClosestFolderIdByElement(target),effectId=this.#findClosestCeEffectIdByElement(target);if(!folderId||!effectId)return;const effect=game.dfreds.effectInterface.findEffect({folderId,effectId});effect&&await Flags.setIsViewable(effect,value)}async onToggleFolder(event){const folderId=this.#findClosestFolderIdByEvent(event);folderId&&(this.#viewMvc.isFolderCollapsed(folderId)?this.#viewMvc.expandFolder(folderId):this.#viewMvc.collapseFolder(folderId),this.#settings.isFolderExpanded(folderId)?await this.#settings.removeExpandedFolder(folderId):await this.#settings.addExpandedFolder(folderId))}async onToggleEffect(event){const effectId=this.#findClosestCeEffectIdByEvent(event);effectId&&await game.dfreds.effectInterface.toggleEffect({effectId,prioritizeTargets:this.#settings.prioritizeTargets})}async onToggleOverlay(target){const effectId=this.#findClosestCeEffectIdByElement(target);effectId&&await game.dfreds.effectInterface.toggleEffect({effectId,overlay:!0,prioritizeTargets:this.#settings.prioritizeTargets})}canToggleStatusEffect(_target){return!!findModuleById(MODULE_IDS.STATUS_EFFECTS)?.active}async onToggleStatusEffect(target){const ceEffectId=this.#findClosestCeEffectIdByElement(target);if(!ceEffectId)return;const ceEffect=findEffectByCeId(ceEffectId);if(!ceEffect)return;const statusEffectsModule=findModuleById(MODULE_IDS.STATUS_EFFECTS);if(!statusEffectsModule?.active)return;const statusEffectsApi=statusEffectsModule.api;statusEffectsApi.findStatusEffect({effectId:ceEffectId,effectName:ceEffect.name})?await statusEffectsApi.deleteStatusEffect({effectId:ceEffectId,effectName:ceEffect.name}):await statusEffectsApi.createNewStatusEffects({effectsData:[ceEffect.toObject()]}),this.#viewMvc.render()}onViewBackups(_event){new BackupConvenientEffectsApp().render(!0)}async onCreateFolder(_event){const result=await getInputFromDialog({});if(result.operation==="create"){const itemData=createConvenientItem({item:{name:result.data.name,type:getBaseType()}});Flags.setFolderColor(itemData,result.data.color);const item=await Item.create(itemData);log(`Created item ${item?.id}`)}}async onCreateEffect(event){event.stopPropagation();const folderId=this.#findClosestFolderIdByEvent(event);if(!folderId)return;const folder=findFolder(folderId,{backup:!1});if(!folder)return;const newEffect=createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.NewEffect"),img:"icons/svg/aura.svg"}});(await folder.createEmbeddedDocuments("ActiveEffect",[newEffect]))[0].sheet.render(!0)}async onDuplicateEffect(target){const folderId=this.#findClosestFolderIdByElement(target),effectId=this.#findClosestCeEffectIdByElement(target);if(!folderId||!effectId)return;const folder=findFolder(folderId,{backup:!1}),effect=game.dfreds.effectInterface.findEffect({folderId,effectId});if(!effect)return;const effects=await folder?.createEmbeddedDocuments("ActiveEffect",[effect]);effects&&effects[0].sheet.render(!0)}async onEditFolder(target){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return;const folder=findFolder(folderId,{backup:!1});if(!folder)return;const result=await getInputFromDialog({folder});result.operation==="update"&&(await Flags.setFolderColor(folder,result.data.color),await folder.update({name:result.data.name}),log(`Updated item ${folder.id}`))}async onEditEffect(target){const folderId=this.#findClosestFolderIdByElement(target),effectId=this.#findClosestCeEffectIdByElement(target);if(!folderId||!effectId)return;game.dfreds.effectInterface.findEffect({folderId,effectId})?.sheet.render(!0)}async onDeleteAllFolder(target){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return;await findFolder(folderId,{backup:!1})?.deleteDialog()}async onDeleteEffect(target){const folderId=this.#findClosestFolderIdByElement(target),effectId=this.#findClosestCeEffectIdByElement(target);if(!folderId||!effectId)return;await game.dfreds.effectInterface.findEffect({folderId,effectId})?.deleteDialog()}onConfigureFolderOwnership(target){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return;const folder=findFolder(folderId,{backup:!1});if(!folder)return;const offsetTop=target.offset()?.top;new DocumentOwnershipConfig(folder,{top:Math.min(offsetTop??0,window.innerHeight-350),left:window.innerWidth-720}).render(!0)}onExportFolder(target){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return;findFolder(folderId,{backup:!1})?.exportToJSON()}async onImportFolder(target){const folderId=this.#findClosestFolderIdByElement(target);if(!folderId)return;await findFolder(folderId,{backup:!1})?.importFromJSONDialog()}async onSearchTextChange(_event,query,rgx,html){const isSearch=!!query;let matchingItems={};if(isSearch&&(matchingItems=await this.#findMatchingItems(rgx)),!html)return;const directoryItems=html.querySelectorAll(".directory-item");for(const dirItem of directoryItems){const $directoryItem=$(dirItem),isDocument=$directoryItem.hasClass("document"),isFolder=$directoryItem.hasClass("folder");if(isDocument){const match=isSearch&&matchingItems.effectIds?.has($directoryItem.data("document-id"));$directoryItem.css("display",!isSearch||match?"flex":"none")}else if(isFolder){const match=isSearch&&matchingItems.folderIds?.has($directoryItem.data("folder-id"));$directoryItem.css("display",!isSearch||match?"flex":"none"),match?$directoryItem.removeClass("collapsed"):dirItem.classList.toggle("collapsed",!this.#settings.isFolderExpanded($directoryItem.data("folder-id")))}}}onEffectDragStart(event){const folderId=this.#findClosestFolderIdByEvent(event),effectId=this.#findClosestCeEffectIdByEvent(event);if(!folderId||!effectId)return;const effect=game.dfreds.effectInterface.findEffect({folderId,effectId});if(effect)if(Flags.getNestedEffectIds(effect))event.dataTransfer?.setData("text/plain",JSON.stringify({effectId:Flags.getCeEffectId(effect)}));else{const dragData=effect.toDragData();event.dataTransfer?.setData("text/plain",JSON.stringify(dragData))}}async onEffectDrop(event){const effectString=event.dataTransfer?.getData("text/plain"),folderId=this.#findClosestFolderIdByEvent(event);if(!effectString||!folderId)return;const effectData=JSON.parse(effectString),effect=await findEffectByUuid(effectData.uuid)??findEffectByCeId(effectData.effectId);if(!effect)return;const originalFolder=findFolder(effect.parent.id,{backup:!1}),newFolder=findFolder(folderId,{backup:!1});Flags.isBackup(effect)?await this.#handleBackupEffectDrop(newFolder,effect):await this.#handleNonBackupEffectDrop(newFolder,originalFolder,effect)}async#handleBackupEffectDrop(newFolder,effect){const effectObject=effect.toObject();Flags.setIsBackup(effectObject,!1),await newFolder?.createEmbeddedDocuments("ActiveEffect",[effectObject])}async#handleNonBackupEffectDrop(newFolder,originalFolder,effect){newFolder?.isOwner?(await newFolder.createEmbeddedDocuments("ActiveEffect",[effect]),originalFolder?.isOwner?await effect.delete():ui.notifications.warn(game.i18n.format("ConvenientEffects.NoPermissionToRemoveEffect",{effectName:effect.name,originalFolderName:originalFolder?.name??"",newFolderName:newFolder?.name??""}))):ui.notifications.warn(game.i18n.format("ConvenientEffects.NoPermissionToAddEffect",{effectName:effect.name,newFolderName:newFolder?.name??""}))}canDrag(){return game.user.role>=this.#settings.appControlsPermission}expandSavedFolders(){this.#settings.expandedFolders.forEach(folderId=>{this.#viewMvc.expandFolder(folderId)})}async onCollapseAll(_event){this.#viewMvc.collapseAllFolders(),await this.#settings.clearExpandedFolders()}setShowHiddenEffectsButtonState(){this.#settings.showHiddenEffects?this.#viewMvc.addActiveShowHiddenEffects():this.#viewMvc.removeActiveShowHiddenEffects()}async onToggleShowHiddenEffects(_event){this.#viewMvc.isShowHiddenEffectsActive()?(this.#viewMvc.removeActiveShowHiddenEffects(),await this.#settings.setShowHiddenEffects(!1)):(this.#viewMvc.addActiveShowHiddenEffects(),await this.#settings.setShowHiddenEffects(!0)),this.#viewMvc.render()}setShowNestedEffectsButtonState(){this.#settings.showNestedEffects?this.#viewMvc.addActiveShowNestedEffects():this.#viewMvc.removeActiveShowNestedEffects()}async onToggleShowNestedEffects(_event){this.#viewMvc.isShowNestedEffectsActive()?(this.#viewMvc.removeActiveShowNestedEffects(),await this.#settings.setShowNestedEffects(!1)):(this.#viewMvc.addActiveShowNestedEffects(),await this.#settings.setShowNestedEffects(!0)),this.#viewMvc.render()}setPrioritizeTargetsButtonState(){this.#settings.prioritizeTargets?this.#viewMvc.addActivePrioritizeTargets():this.#viewMvc.removeActivePrioritizeTargets()}async onTogglePrioritizeTargets(_event){this.#viewMvc.isPrioritizeTargetsActive()?(this.#viewMvc.removeActivePrioritizeTargets(),await this.#settings.setPrioritizeTargets(!1)):(this.#viewMvc.addActivePrioritizeTargets(),await this.#settings.setPrioritizeTargets(!0))}#findClosestCeEffectIdByElement(element){return element.closest("[data-ce-effect-id], .convenient-effect").data("ce-effect-id")}#findClosestCeEffectIdByEvent(event){if(event.target)return $(event.target).closest("[data-ce-effect-id], .convenient-effect").data("ce-effect-id")}#findClosestFolderIdByElement(element){return element.closest("[data-folder-id], .convenient-folder").data("folder-id")}#findClosestFolderIdByEvent(event){if(event.target)return $(event.target).closest("[data-folder-id], .convenient-folder").data("folder-id")}async#findMatchingItems(rgx){const effectIds=new Set,folderIds=new Set,viewData=this.getData();for(const data of viewData.folderData)for(const effect of data.effects)rgx.test(SearchFilter.cleanQuery(effect.name))&&(effectIds.add(effect.id),folderIds.add(data.folder.id));return{effectIds,folderIds}}}class ConvenientEffectsApp extends Application{static{__name2(this,"ConvenientEffectsApp")}static{__name(this,"ConvenientEffectsApp")}#controller;#rootView;refresh;constructor(){super(),this.#controller=new ConvenientEffectsController({viewMvc:this}),this.#rootView=$("<div>"),this.refresh=foundry.utils.debounce(this.render.bind(this),100)}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{width:300,height:600,top:75,left:125,popOut:!0,minimizable:!0,resizable:!0,id:"convenient-effects",classes:["sidebar-popout"],scrollY:["ol.directory-list"],dragDrop:[{dragSelector:".convenient-effect",dropSelector:".convenient-folder"}],filters:[{inputSelector:'input[name="search"]',contentSelector:".directory-list"}],title:"ConvenientEffects.AppName",template:"modules/dfreds-convenient-effects/templates/convenient-effects-app.hbs"})}getData(_options){return this.#controller.getData()}activateListeners(html){this.#rootView=html,this.#initClickListeners(),this.#initContextMenus();const dh=this.#onDragHighlight.bind(this);html.find(".folder").on("dragenter",dh).on("dragleave",dh),this.#controller.expandSavedFolders(),this.#controller.setShowHiddenEffectsButtonState(),this.#controller.setShowNestedEffectsButtonState(),this.#controller.setPrioritizeTargetsButtonState()}#onDragHighlight(event){const li=event.currentTarget;if(li.classList.contains("folder")){if(event.stopPropagation(),event.type==="dragenter")for(const t of li.closest(".directory-list").querySelectorAll(".droptarget"))t.classList.remove("droptarget");event.type==="dragleave"&&document.elementFromPoint(event.clientX,event.clientY).closest(".folder")===li||li.classList.toggle("droptarget",event.type==="dragenter")}}async _onSearchFilter(event,query,rgx,html){return this.#controller.onSearchTextChange(event,query,rgx,html)}_onDragStart(event){this.#controller.onEffectDragStart(event)}async _onDrop(event){await this.#controller.onEffectDrop(event)}_canDragStart(_selector){return this.#controller.canDrag()}_canDragDrop(_selector){return this.#controller.canDrag()}isFolderCollapsed(folderId){return this.#findFolderById(folderId).hasClass("collapsed")}collapseFolder(folderId){this.#findFolderById(folderId).addClass("collapsed")}expandFolder(folderId){this.#findFolderById(folderId).removeClass("collapsed")}collapseAllFolders(){this.#allDirectories.addClass("collapsed")}isShowHiddenEffectsActive(){return this.#showHiddenEffectsButton.hasClass("active")}removeActiveShowHiddenEffects(){this.#showHiddenEffectsButton.removeClass("active")}addActiveShowHiddenEffects(){this.#showHiddenEffectsButton.addClass("active")}isShowNestedEffectsActive(){return this.#showNestedEffectsButton.hasClass("active")}removeActiveShowNestedEffects(){this.#showNestedEffectsButton.removeClass("active")}addActiveShowNestedEffects(){this.#showNestedEffectsButton.addClass("active")}isPrioritizeTargetsActive(){return this.#prioritizeTargetsButton.hasClass("active")}removeActivePrioritizeTargets(){this.#prioritizeTargetsButton.removeClass("active")}addActivePrioritizeTargets(){this.#prioritizeTargetsButton.addClass("active")}#initClickListeners(){this.#collapseAllButton.on("click",this.#controller.onCollapseAll.bind(this.#controller)),this.#createFolderButton.on("click",this.#controller.onCreateFolder.bind(this.#controller)),this.#viewBackupsButton.on("click",this.#controller.onViewBackups.bind(this.#controller)),this.#createEffectButton.on("click",this.#controller.onCreateEffect.bind(this.#controller)),this.#effectListItems.on("click",this.#controller.onToggleEffect.bind(this.#controller)),this.#folderHeaders.on("click",this.#controller.onToggleFolder.bind(this.#controller)),this.#showHiddenEffectsButton.on("click",this.#controller.onToggleShowHiddenEffects.bind(this.#controller)),this.#showNestedEffectsButton.on("click",this.#controller.onToggleShowNestedEffects.bind(this.#controller)),this.#prioritizeTargetsButton.on("click",this.#controller.onTogglePrioritizeTargets.bind(this.#controller))}#initContextMenus(){ContextMenu.create(this,this.#rootView,".convenient-folder .folder-header",[{name:"FOLDER.Edit",icon:'<i class="fas fa-edit fa-fw"></i>',condition:this.#controller.isUserFolderOwner.bind(this.#controller),callback:this.#controller.onEditFolder.bind(this.#controller)},{name:"FOLDER.Delete",icon:'<i class="fas fa-dumpster fa-fw"></i>',condition:this.#controller.isUserFolderOwner.bind(this.#controller),callback:this.#controller.onDeleteAllFolder.bind(this.#controller)},{name:"OWNERSHIP.Configure",icon:'<i class="fas fa-lock"></i>',condition:__name(()=>game.user.isGM,"condition"),callback:this.#controller.onConfigureFolderOwnership.bind(this.#controller)},{name:"ConvenientEffects.ShowFolder",icon:'<i class="fas fa-eye fa-fw"></i>',condition:__name(target=>this.#controller.isUserFolderOwner(target)&&!this.#controller.isFolderViewable(target),"condition"),callback:__name(target=>{this.#controller.setFolderViewable(target,!0)},"callback")},{name:"ConvenientEffects.HideFolder",icon:'<i class="fas fa-eye-slash fa-fw"></i>',condition:__name(target=>this.#controller.isUserFolderOwner(target)&&this.#controller.isFolderViewable(target),"condition"),callback:__name(target=>{this.#controller.setFolderViewable(target,!1)},"callback")},{name:"SIDEBAR.Export",icon:'<i class="fas fa-file-export fa-fw"></i>',condition:this.#controller.isUserFolderOwner.bind(this.#controller),callback:this.#controller.onExportFolder.bind(this.#controller)},{name:"SIDEBAR.Import",icon:'<i class="fas fa-file-import fa-fw"></i>',condition:this.#controller.isUserFolderOwner.bind(this.#controller),callback:this.#controller.onImportFolder.bind(this.#controller)}]),ContextMenu.create(this,this.#rootView,".convenient-effect",[{name:"ConvenientEffects.EditEffect",icon:'<i class="fas fa-edit fa-fw"></i>',condition:this.#controller.isUserFolderOwner.bind(this.#controller),callback:__name(target=>{this.#controller.onEditEffect(target)},"callback")},{name:"ConvenientEffects.DeleteEffect",icon:'<i class="fas fa-trash fa-fw"></i>',condition:this.#controller.isUserFolderOwner.bind(this.#controller),callback:this.#controller.onDeleteEffect.bind(this.#controller)},{name:"ConvenientEffects.ToggleAsOverlay",icon:'<i class="far fa-dot-circle fa-fw"></i>',callback:this.#controller.onToggleOverlay.bind(this.#controller)},{name:"ConvenientEffects.ToggleStatusEffect",icon:'<i class="far fa-person-rays fa-fw"></i>',condition:this.#controller.canToggleStatusEffect.bind(this.#controller),callback:this.#controller.onToggleStatusEffect.bind(this.#controller)},{name:"SIDEBAR.Duplicate",icon:'<i class="far fa-copy fa-fw"></i>',condition:this.#controller.isUserFolderOwner.bind(this.#controller),callback:this.#controller.onDuplicateEffect.bind(this.#controller)},{name:"ConvenientEffects.ShowEffect",icon:'<i class="fas fa-eye fa-fw"></i>',condition:__name(target=>this.#controller.isUserFolderOwner(target)&&!this.#controller.isEffectViewable(target),"condition"),callback:__name(target=>{this.#controller.setEffectViewable(target,!0)},"callback")},{name:"ConvenientEffects.HideEffect",icon:'<i class="fas fa-eye-slash fa-fw"></i>',condition:__name(target=>this.#controller.isUserFolderOwner(target)&&this.#controller.isEffectViewable(target),"condition"),callback:__name(target=>{this.#controller.setEffectViewable(target,!1)},"callback")}])}#findFolderById(folderId){return this.#rootView.find(`.convenient-folder[data-folder-id="${folderId}"]`)}get#allDirectories(){return this.#rootView.find(".convenient-folder")}get#collapseAllButton(){return this.#rootView.find(".collapse-all")}get#createFolderButton(){return this.#rootView.find(".create-folder")}get#viewBackupsButton(){return this.#rootView.find(".view-backups")}get#createEffectButton(){return this.#rootView.find(".create-button")}get#effectListItems(){return this.#rootView.find(".convenient-effect")}get#folderHeaders(){return this.#rootView.find(".directory-list .folder-header")}get#showHiddenEffectsButton(){return this.#rootView.find(".show-hidden-effects")}get#showNestedEffectsButton(){return this.#rootView.find(".show-nested-effects")}get#prioritizeTargetsButton(){return this.#rootView.find(".prioritize-targets")}}function renderAppIfOpen(){const ceApp=Object.values(ui.windows).find(app=>app instanceof ConvenientEffectsApp);ceApp&&ceApp.refresh()}__name2(renderAppIfOpen,"renderAppIfOpen"),__name(renderAppIfOpen,"renderAppIfOpen");const CloseActiveEffectConfig={listen(){Hooks.on("closeActiveEffectConfig",(activeEffectConfig,_html)=>{const effect=activeEffectConfig.document;Flags.isConvenient(effect)&&effect.parent instanceof Item&&Flags.isConvenient(effect.parent)&&renderAppIfOpen()})}},CreateActiveEffect={listen(){Hooks.on("createActiveEffect",(activeEffect,_metadata,_userId)=>{const effect=activeEffect;Flags.isConvenient(effect)&&effect.parent instanceof Item&&Flags.isConvenient(effect.parent)&&renderAppIfOpen()})}};class EffectDefinition{static{__name2(this,"EffectDefinition")}static{__name(this,"EffectDefinition")}settings;constructor(){this.settings=new Settings}async initialize(){this.settings.hasInitialized||(ui.notifications.info(game.i18n.localize("ConvenientEffects.Initializing")),await this.#createItemsAndEffects({backup:!1}),await this.#createItemsAndEffects({backup:!0}),await this.settings.setHasInitialized(!0),ui.notifications.info(game.i18n.localize("ConvenientEffects.FinishedInitializing"))),await this.#runMigrations()}async#createItemsAndEffects({backup}){const effectPromises=this.initialItemEffects.map(async itemEffect=>{const item=await Item.create(createConvenientItem({item:{name:itemEffect.itemData.name,type:getBaseType()},isBackup:backup}));if(item)return item.createEmbeddedDocuments("ActiveEffect",itemEffect.effects.map(effect=>(Flags.setIsBackup(effect,backup),effect)))});await Promise.all(effectPromises)}async#runMigrations(){try{const migrationsRun=this.settings.ranMigrations,sortedMigrations=this.migrations.sort((a,b)=>a.date.getTime()-b.date.getTime());for(const migration2 of sortedMigrations)migrationsRun.includes(migration2.key)||(log(`Running version ${migration2.key} migration for ${this.systemId}`),await migration2.func(),await this.settings.addRanMigration(migration2.key))}catch(e){error(`Something went wrong while running migrations: ${e}`)}}}const migration={key:"2024-08-14-migrate-old-custom-effects",date:new Date("2024-08-14"),func:__name(async()=>{const oldCustomEffect=game.items.find(item=>item.name==="Custom Convenient Effects");if(!oldCustomEffect)return;const newItem=createConvenientItem({item:oldCustomEffect.toObject()});newItem.name="Legacy Custom Convenient Effects",newItem.effects=newItem.effects?.filter(notEmpty).map(effect=>createConvenientEffect({effect})),await Item.create(newItem),await oldCustomEffect.delete()},"func")};function tokenMagic({value,priority}){return{key:"macro.tokenMagic",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value,priority}}__name2(tokenMagic,"tokenMagic"),__name(tokenMagic,"tokenMagic");function advantage(){return{key:"flags.midi-qol.advantage.all",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(advantage,"advantage"),__name(advantage,"advantage");function advantageDeathSave(){return{key:"flags.midi-qol.advantage.deathSave",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(advantageDeathSave,"advantageDeathSave"),__name(advantageDeathSave,"advantageDeathSave");function advantageAttack({attackType}){return{key:`flags.midi-qol.advantage.attack.${attackType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(advantageAttack,"advantageAttack"),__name(advantageAttack,"advantageAttack");function disadvantageAttack({attackType}){return{key:`flags.midi-qol.disadvantage.attack.${attackType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(disadvantageAttack,"disadvantageAttack"),__name(disadvantageAttack,"disadvantageAttack");function grantAdvantageAttack({attackType}){return{key:`flags.midi-qol.grants.advantage.attack.${attackType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(grantAdvantageAttack,"grantAdvantageAttack"),__name(grantAdvantageAttack,"grantAdvantageAttack");function grantDisadvantageAttack({attackType}){return{key:`flags.midi-qol.grants.disadvantage.attack.${attackType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(grantDisadvantageAttack,"grantDisadvantageAttack"),__name(grantDisadvantageAttack,"grantDisadvantageAttack");function advantageAbility({abilityType}){return{key:`flags.midi-qol.advantage.ability.${abilityType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(advantageAbility,"advantageAbility"),__name(advantageAbility,"advantageAbility");function advantageAbilityCheck({abilityCheckType}){return{key:`flags.midi-qol.advantage.ability.check.${abilityCheckType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(advantageAbilityCheck,"advantageAbilityCheck"),__name(advantageAbilityCheck,"advantageAbilityCheck");function disadvantageAbilityCheck({abilityCheckType}){return{key:`flags.midi-qol.disadvantage.ability.check.${abilityCheckType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(disadvantageAbilityCheck,"disadvantageAbilityCheck"),__name(disadvantageAbilityCheck,"disadvantageAbilityCheck");function advantageAbilitySave({saveType}){return{key:`flags.midi-qol.advantage.ability.save.${saveType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(advantageAbilitySave,"advantageAbilitySave"),__name(advantageAbilitySave,"advantageAbilitySave");function disadvantageAbilitySave({saveType}){return{key:`flags.midi-qol.disadvantage.ability.save.${saveType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(disadvantageAbilitySave,"disadvantageAbilitySave"),__name(disadvantageAbilitySave,"disadvantageAbilitySave");function failAbilitySave({saveType}){return{key:`flags.midi-qol.fail.ability.save.${saveType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(failAbilitySave,"failAbilitySave"),__name(failAbilitySave,"failAbilitySave");function advantageSkill({skillType}){return{key:`flags.midi-qol.advantage.skill.${skillType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(advantageSkill,"advantageSkill"),__name(advantageSkill,"advantageSkill");function grantCriticalRange({range}){return{key:"flags.midi-qol.grants.critical.range",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value:range}}__name2(grantCriticalRange,"grantCriticalRange"),__name(grantCriticalRange,"grantCriticalRange");function grantFailAttack({attackType}){return{key:`flags.midi-qol.grants.attack.fail.${attackType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(grantFailAttack,"grantFailAttack"),__name(grantFailAttack,"grantFailAttack");function optionalLabel({key,label}){return{key:`flags.midi-qol.optional.${key}.label`,mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value:label}}__name2(optionalLabel,"optionalLabel"),__name(optionalLabel,"optionalLabel");function optionalAttack({key,attackType,value}){return{key:`flags.midi-qol.optional.${key}.attack.${attackType}`,mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value}}__name2(optionalAttack,"optionalAttack"),__name(optionalAttack,"optionalAttack");function optionalSave({key,saveType,value}){return{key:`flags.midi-qol.optional.${key}.save.${saveType}`,mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value}}__name2(optionalSave,"optionalSave"),__name(optionalSave,"optionalSave");function optionalAbilityCheck({key,abilityCheckType,value}){return{key:`flags.midi-qol.optional.${key}.check.${abilityCheckType}`,mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value}}__name2(optionalAbilityCheck,"optionalAbilityCheck"),__name(optionalAbilityCheck,"optionalAbilityCheck");function optionalSkill({key,skillType,value}){return{key:`flags.midi-qol.optional.${key}.skill.${skillType}`,mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value}}__name2(optionalSkill,"optionalSkill"),__name(optionalSkill,"optionalSkill");function magicResistanceSaves(){return{key:"flags.midi-qol.magicResistance.save.all",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(magicResistanceSaves,"magicResistanceSaves"),__name(magicResistanceSaves,"magicResistanceSaves");function atlLight({lightType,value,priority}){return{key:`ATL.light.${lightType}`,mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value,priority}}__name2(atlLight,"atlLight"),__name(atlLight,"atlLight");function atlSightRange({value,priority}){return{key:"ATL.sight.range",mode:CONST.ACTIVE_EFFECT_MODES.UPGRADE,value,priority}}__name2(atlSightRange,"atlSightRange"),__name(atlSightRange,"atlSightRange");function atlSightVisionMode({value,priority}){return{key:"ATL.sight.visionMode",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value,priority}}__name2(atlSightVisionMode,"atlSightVisionMode"),__name(atlSightVisionMode,"atlSightVisionMode");function attackBonus({attackType,value,priority}){return{key:`system.bonuses.${attackType}.attack`,mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(attackBonus,"attackBonus"),__name(attackBonus,"attackBonus");function spellDcBonus({value,priority}){return{key:"system.bonuses.spell.dc",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(spellDcBonus,"spellDcBonus"),__name(spellDcBonus,"spellDcBonus");function checkBonus({value,priority}){return{key:"system.bonuses.abilities.check",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(checkBonus,"checkBonus"),__name(checkBonus,"checkBonus");function damageBonus({damageType,value,priority}){return{key:`system.bonuses.${damageType}.damage`,mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(damageBonus,"damageBonus"),__name(damageBonus,"damageBonus");function saveBonus({value,priority}){return{key:"system.bonuses.abilities.save",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(saveBonus,"saveBonus"),__name(saveBonus,"saveBonus");function addConditionImmunity({condition}){return{key:"system.traits.ci.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:condition}}__name2(addConditionImmunity,"addConditionImmunity"),__name(addConditionImmunity,"addConditionImmunity");function addDamageImmunity({damageType}){return{key:"system.traits.di.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:damageType}}__name2(addDamageImmunity,"addDamageImmunity"),__name(addDamageImmunity,"addDamageImmunity");function addAllDamageImmunity(){return{key:"system.traits.di.all",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(addAllDamageImmunity,"addAllDamageImmunity"),__name(addAllDamageImmunity,"addAllDamageImmunity");function addDamageResistance({damageType}){return{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:damageType}}__name2(addDamageResistance,"addDamageResistance"),__name(addDamageResistance,"addDamageResistance");function addAllDamageResistance(){return{key:"system.traits.dr.all",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(addAllDamageResistance,"addAllDamageResistance"),__name(addAllDamageResistance,"addAllDamageResistance");function addAllDamageVulnerability(){return{key:"system.traits.dv.all",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(addAllDamageVulnerability,"addAllDamageVulnerability"),__name(addAllDamageVulnerability,"addAllDamageVulnerability");function addLanguage({language}){return{key:"system.traits.languages.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:language}}__name2(addLanguage,"addLanguage"),__name(addLanguage,"addLanguage");function addWeaponProficiency({weapon}){return{key:"system.traits.weaponProf.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:weapon}}__name2(addWeaponProficiency,"addWeaponProficiency"),__name(addWeaponProficiency,"addWeaponProficiency");function addAllLanguages(){return{key:"system.traits.languages.all",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(addAllLanguages,"addAllLanguages"),__name(addAllLanguages,"addAllLanguages");function acBonus({value,priority}){return{key:"system.attributes.ac.bonus",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(acBonus,"acBonus"),__name(acBonus,"acBonus");function acCalc({value,priority}){return{key:"system.attributes.ac.calc",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value,priority}}__name2(acCalc,"acCalc"),__name(acCalc,"acCalc");function acCover({value,priority}){return{key:"system.attributes.ac.cover",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(acCover,"acCover"),__name(acCover,"acCover");function acFormula({value,priority}){return{key:"system.attributes.ac.formula",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value,priority}}__name2(acFormula,"acFormula"),__name(acFormula,"acFormula");function addDarkvision({value,priority}){return{key:"system.attributes.senses.darkvision",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(addDarkvision,"addDarkvision"),__name(addDarkvision,"addDarkvision");function upgradeDarkvision({value,priority}){return{key:"system.attributes.senses.darkvision",mode:CONST.ACTIVE_EFFECT_MODES.UPGRADE,value,priority}}__name2(upgradeDarkvision,"upgradeDarkvision"),__name(upgradeDarkvision,"upgradeDarkvision");function upgradeTrueSight({value,priority}){return{key:"system.attributes.senses.truesight",mode:CONST.ACTIVE_EFFECT_MODES.UPGRADE,value,priority}}__name2(upgradeTrueSight,"upgradeTrueSight"),__name(upgradeTrueSight,"upgradeTrueSight");function exhaustion({value,priority}){return{key:"system.attributes.exhaustion",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value,priority}}__name2(exhaustion,"exhaustion"),__name(exhaustion,"exhaustion");function movement({movementType,value,priority}){return{key:`system.attributes.movement.${movementType}`,mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value,priority}}__name2(movement,"movement"),__name(movement,"movement");function upgradeMovement({movementType,value,priority}){return{key:`system.attributes.movement.${movementType}`,mode:CONST.ACTIVE_EFFECT_MODES.UPGRADE,value,priority}}__name2(upgradeMovement,"upgradeMovement"),__name(upgradeMovement,"upgradeMovement");function multiplyEncumbrance({value,priority}){return{key:"system.attributes.encumbrance.max",mode:CONST.ACTIVE_EFFECT_MODES.MULTIPLY,value,priority}}__name2(multiplyEncumbrance,"multiplyEncumbrance"),__name(multiplyEncumbrance,"multiplyEncumbrance");function initiativeAdv(){return{key:"flags.dnd5e.initiativeAdv",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(initiativeAdv,"initiativeAdv"),__name(initiativeAdv,"initiativeAdv");function initiativeDisadv(){return{key:"flags.dnd5e.initiativeDisadv",mode:CONST.ACTIVE_EFFECT_MODES.CUSTOM,value:"1"}}__name2(initiativeDisadv,"initiativeDisadv"),__name(initiativeDisadv,"initiativeDisadv");function conditions(){return{itemData:{name:game.i18n.localize("ConvenientEffects.Dnd.Folders.Conditions")},effects:[blinded(),charmed(),concentrating(),dead(),deafened(),exhaustion1(),exhaustion2(),exhaustion3(),exhaustion4(),exhaustion5(),frightened(),grappled(),incapacitated(),invisible(),paralyzed(),petrified(),poisoned(),prone(),restrained(),stunned(),unconscious(),wounded()]}}__name2(conditions,"conditions"),__name(conditions,"conditions");function blinded(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Blinded.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Blinded.description"),img:"modules/dfreds-convenient-effects/images/blinded.svg",statuses:["blinded"],changes:[disadvantageAttack({attackType:"all"}),grantAdvantageAttack({attackType:"all"})]}})}__name2(blinded,"blinded"),__name(blinded,"blinded");function charmed(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Charmed.name"),statuses:["charmed"],description:game.i18n.localize("ConvenientEffects.Dnd.Charmed.description"),img:"modules/dfreds-convenient-effects/images/charmed.svg"}})}__name2(charmed,"charmed"),__name(charmed,"charmed");function concentrating(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Concentrating.name"),statuses:["concentrating"],description:game.i18n.localize("ConvenientEffects.Dnd.Concentrating.description"),img:"modules/dfreds-convenient-effects/images/concentrating.svg"}})}__name2(concentrating,"concentrating"),__name(concentrating,"concentrating");function dead(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Dead.name"),statuses:["dead"],description:game.i18n.localize("ConvenientEffects.Dnd.Dead.description"),img:"icons/svg/skull.svg"}})}__name2(dead,"dead"),__name(dead,"dead");function deafened(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Deafened.name"),statuses:["deafened"],description:game.i18n.localize("ConvenientEffects.Dnd.Deafened.description"),img:"modules/dfreds-convenient-effects/images/deafened.svg"}})}__name2(deafened,"deafened"),__name(deafened,"deafened");function exhaustion1(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion1.name"),statuses:["exhaustion"],description:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion1.description"),img:"modules/dfreds-convenient-effects/images/exhaustion1.svg",flags:{dnd5e:{exhaustionLevel:1}},changes:[exhaustion({value:"1"}),disadvantageAbilityCheck({abilityCheckType:"all"}),initiativeDisadv()]}})}__name2(exhaustion1,"exhaustion1"),__name(exhaustion1,"exhaustion1");function exhaustion2(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion2.name"),statuses:["exhaustion"],description:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion2.description"),img:"modules/dfreds-convenient-effects/images/exhaustion2.svg",flags:{dnd5e:{exhaustionLevel:2}},changes:[exhaustion({value:"2"}),disadvantageAbilityCheck({abilityCheckType:"all"}),initiativeDisadv(),movement({movementType:"all",value:"*0.5",priority:25})]}})}__name2(exhaustion2,"exhaustion2"),__name(exhaustion2,"exhaustion2");function exhaustion3(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion3.name"),statuses:["exhaustion"],description:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion3.description"),img:"modules/dfreds-convenient-effects/images/exhaustion3.svg",flags:{dnd5e:{exhaustionLevel:3}},changes:[exhaustion({value:"3"}),disadvantageAbilityCheck({abilityCheckType:"all"}),initiativeDisadv(),movement({movementType:"all",value:"*0.5",priority:25}),disadvantageAttack({attackType:"all"}),disadvantageAbilitySave({saveType:"all"})]}})}__name2(exhaustion3,"exhaustion3"),__name(exhaustion3,"exhaustion3");function exhaustion4(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion4.name"),statuses:["exhaustion"],description:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion4.description"),img:"modules/dfreds-convenient-effects/images/exhaustion4.svg",flags:{dnd5e:{exhaustionLevel:4}},changes:[exhaustion({value:"4"}),disadvantageAbilityCheck({abilityCheckType:"all"}),initiativeDisadv(),movement({movementType:"all",value:"*0.5",priority:25}),disadvantageAttack({attackType:"all"}),disadvantageAbilitySave({saveType:"all"})]}})}__name2(exhaustion4,"exhaustion4"),__name(exhaustion4,"exhaustion4");function exhaustion5(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion5.name"),statuses:["exhaustion"],description:game.i18n.localize("ConvenientEffects.Dnd.Exhaustion5.description"),img:"modules/dfreds-convenient-effects/images/exhaustion5.svg",flags:{dnd5e:{exhaustionLevel:5}},changes:[exhaustion({value:"5"}),disadvantageAbilityCheck({abilityCheckType:"all"}),initiativeDisadv(),movement({movementType:"all",value:"0",priority:25}),disadvantageAttack({attackType:"all"}),disadvantageAbilitySave({saveType:"all"})]}})}__name2(exhaustion5,"exhaustion5"),__name(exhaustion5,"exhaustion5");function frightened(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Frightened.name"),statuses:["frightened"],description:game.i18n.localize("ConvenientEffects.Dnd.Frightened.description"),img:"modules/dfreds-convenient-effects/images/frightened.svg",changes:[disadvantageAttack({attackType:"all"}),disadvantageAbilityCheck({abilityCheckType:"all"})]}})}__name2(frightened,"frightened"),__name(frightened,"frightened");function grappled(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Grappled.name"),statuses:["grappled"],description:game.i18n.localize("ConvenientEffects.Dnd.Grappled.description"),img:"modules/dfreds-convenient-effects/images/grappled.svg",changes:[movement({movementType:"all",value:"0",priority:25})]}})}__name2(grappled,"grappled"),__name(grappled,"grappled");function incapacitated(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Incapacitated.name"),statuses:["incapacitated"],description:game.i18n.localize("ConvenientEffects.Dnd.Incapacitated.description"),img:"modules/dfreds-convenient-effects/images/incapacitated.svg"}})}__name2(incapacitated,"incapacitated"),__name(incapacitated,"incapacitated");function invisible(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Invisible.name"),statuses:["invisible"],description:game.i18n.localize("ConvenientEffects.Dnd.Invisible.description"),img:"modules/dfreds-convenient-effects/images/invisible.svg",changes:[advantageAttack({attackType:"all"}),grantDisadvantageAttack({attackType:"all"})]}})}__name2(invisible,"invisible"),__name(invisible,"invisible");function paralyzed(){const subEffectIds=[incapacitated()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Paralyzed.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Paralyzed.description"),img:"modules/dfreds-convenient-effects/images/paralyzed.svg",statuses:["paralyzed"],changes:[failAbilitySave({saveType:"str"}),failAbilitySave({saveType:"dex"}),grantAdvantageAttack({attackType:"all"}),grantCriticalRange({range:"5"}),movement({movementType:"all",value:"0",priority:25})]},subEffectIds})}__name2(paralyzed,"paralyzed"),__name(paralyzed,"paralyzed");function petrified(){const subEffectIds=[incapacitated()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Petrified.name"),statuses:["petrified"],description:game.i18n.localize("ConvenientEffects.Dnd.Petrified.description"),img:"modules/dfreds-convenient-effects/images/petrified.svg",changes:[grantAdvantageAttack({attackType:"all"}),failAbilitySave({saveType:"str"}),failAbilitySave({saveType:"dex"}),addDamageImmunity({damageType:"poison"}),addAllDamageResistance(),movement({movementType:"all",value:"0",priority:25})]},subEffectIds})}__name2(petrified,"petrified"),__name(petrified,"petrified");function poisoned(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Poisoned.name"),statuses:["poisoned"],description:game.i18n.localize("ConvenientEffects.Dnd.Poisoned.description"),img:"modules/dfreds-convenient-effects/images/poisoned.svg",changes:[disadvantageAttack({attackType:"all"}),disadvantageAbilityCheck({abilityCheckType:"all"})]}})}__name2(poisoned,"poisoned"),__name(poisoned,"poisoned");function prone(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Prone.name"),statuses:["prone"],description:game.i18n.localize("ConvenientEffects.Dnd.Prone.description"),img:"modules/dfreds-convenient-effects/images/prone.svg",changes:[grantAdvantageAttack({attackType:"mwak"}),grantAdvantageAttack({attackType:"msak"}),grantDisadvantageAttack({attackType:"rwak"}),grantDisadvantageAttack({attackType:"rsak"}),disadvantageAttack({attackType:"all"}),movement({movementType:"all",value:"*0.5",priority:25})]}})}__name2(prone,"prone"),__name(prone,"prone");function restrained(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Restrained.name"),statuses:["restrained"],description:game.i18n.localize("ConvenientEffects.Dnd.Restrained.description"),img:"modules/dfreds-convenient-effects/images/restrained.svg",changes:[disadvantageAbilitySave({saveType:"dex"}),disadvantageAttack({attackType:"all"}),advantageAttack({attackType:"all"}),movement({movementType:"all",value:"0",priority:25})]}})}__name2(restrained,"restrained"),__name(restrained,"restrained");function stunned(){const subEffectIds=[incapacitated()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Stunned.name"),statuses:["stunned"],description:game.i18n.localize("ConvenientEffects.Dnd.Stunned.description"),img:"modules/dfreds-convenient-effects/images/stunned.svg",changes:[failAbilitySave({saveType:"str"}),failAbilitySave({saveType:"dex"}),grantAdvantageAttack({attackType:"all"})]},subEffectIds})}__name2(stunned,"stunned"),__name(stunned,"stunned");function unconscious(){const subEffectIds=[incapacitated()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{statuses:["unconscious"],name:game.i18n.localize("ConvenientEffects.Dnd.Unconscious.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Unconscious.description"),img:"icons/svg/unconscious.svg",changes:[failAbilitySave({saveType:"str"}),failAbilitySave({saveType:"dex"}),grantAdvantageAttack({attackType:"all"}),grantCriticalRange({range:"5"}),movement({movementType:"all",value:"0",priority:25})]},subEffectIds})}__name2(unconscious,"unconscious"),__name(unconscious,"unconscious");function wounded(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Wounded.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Wounded.description"),img:"modules/dfreds-convenient-effects/images/wounded.svg"}})}__name2(wounded,"wounded"),__name(wounded,"wounded");function classFeatures(){return{itemData:{name:game.i18n.localize("ConvenientEffects.Dnd.Folders.ClassFeatures")},effects:[bardicInspiration(),bardicInspirationD6(),bardicInspirationD8(),bardicInspirationD10(),bardicInspirationD12(),channelDivinitySacredWeapon(),channelDivinityTurnTheUnholy(),channelDivinityTurnUndead(),kiEmptyBody(),kiPatientDefense(),rage(),recklessAttack(),recklessAttackAdvantage()]}}__name2(classFeatures,"classFeatures"),__name(classFeatures,"classFeatures");function bardicInspiration(){const nestedEffectIds=[bardicInspirationD6(),bardicInspirationD8(),bardicInspirationD10(),bardicInspirationD12()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BardicInspiration.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BardicInspiration.description"),img:"icons/skills/melee/unarmed-punch-fist.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES}},nestedEffectIds})}__name2(bardicInspiration,"bardicInspiration"),__name(bardicInspiration,"bardicInspiration");function bardicInspirationD6(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD6.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD6.description"),img:"icons/skills/melee/unarmed-punch-fist.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[optionalLabel({key:"bardic-inspiration",label:"Bardic Inspiration"}),optionalAttack({key:"bardic-inspiration",attackType:"all",value:"+1d6"}),optionalSave({key:"bardic-inspiration",saveType:"all",value:"+1d6"}),optionalSkill({key:"bardic-inspiration",skillType:"all",value:"+1d6"})]}})}__name2(bardicInspirationD6,"bardicInspirationD6"),__name(bardicInspirationD6,"bardicInspirationD6");function bardicInspirationD8(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD8.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD8.description"),img:"icons/skills/melee/unarmed-punch-fist.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[optionalLabel({key:"bardic-inspiration",label:"Bardic Inspiration"}),optionalAttack({key:"bardic-inspiration",attackType:"all",value:"+1d8"}),optionalSave({key:"bardic-inspiration",saveType:"all",value:"+1d8"}),optionalSkill({key:"bardic-inspiration",skillType:"all",value:"+1d8"})]}})}__name2(bardicInspirationD8,"bardicInspirationD8"),__name(bardicInspirationD8,"bardicInspirationD8");function bardicInspirationD10(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD10.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD10.description"),img:"icons/skills/melee/unarmed-punch-fist.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[optionalLabel({key:"bardic-inspiration",label:"Bardic Inspiration"}),optionalAttack({key:"bardic-inspiration",attackType:"all",value:"+1d10"}),optionalSave({key:"bardic-inspiration",saveType:"all",value:"+1d10"}),optionalSkill({key:"bardic-inspiration",skillType:"all",value:"+1d10"})]}})}__name2(bardicInspirationD10,"bardicInspirationD10"),__name(bardicInspirationD10,"bardicInspirationD10");function bardicInspirationD12(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD12.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BardicInspirationD12.description"),img:"icons/skills/melee/unarmed-punch-fist.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[optionalLabel({key:"bardic-inspiration",label:"Bardic Inspiration"}),optionalAttack({key:"bardic-inspiration",attackType:"all",value:"+1d12"}),optionalSave({key:"bardic-inspiration",saveType:"all",value:"+1d12"}),optionalSkill({key:"bardic-inspiration",skillType:"all",value:"+1d12"})]}})}__name2(bardicInspirationD12,"bardicInspirationD12"),__name(bardicInspirationD12,"bardicInspirationD12");function channelDivinitySacredWeapon(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ChannelDivinitySacredWeapon.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ChannelDivinitySacredWeapon.description"),img:"icons/weapons/swords/sword-gold-holy.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[attackBonus({attackType:"mwak",value:"+max(1, @abilities.cha.mod)"}),attackBonus({attackType:"rwak",value:"+max(1, @abilities.cha.mod)"}),atlLight({lightType:"dim",value:"40"}),atlLight({lightType:"bright",value:"20"}),atlLight({lightType:"color",value:COLORS.WHITE}),atlLight({lightType:"alpha",value:"0.25"}),atlLight({lightType:"animation",value:'{"type": "sunburst", "speed": 2,"intensity": 4}'})]}})}__name2(channelDivinitySacredWeapon,"channelDivinitySacredWeapon"),__name(channelDivinitySacredWeapon,"channelDivinitySacredWeapon");function channelDivinityTurnTheUnholy(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ChannelDivinityTurnTheUnholy.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ChannelDivinityTurnTheUnholy.description"),img:"icons/magic/fire/explosion-embers-evade-silhouette.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},flags:{dae:{specialDuration:["isDamaged"]}}}})}__name2(channelDivinityTurnTheUnholy,"channelDivinityTurnTheUnholy"),__name(channelDivinityTurnTheUnholy,"channelDivinityTurnTheUnholy");function channelDivinityTurnUndead(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ChannelDivinityTurnUndead.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ChannelDivinityTurnUndead.description"),img:"icons/magic/fire/flame-burning-creature-skeleton.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},flags:{dae:{specialDuration:["isDamaged"]}}}})}__name2(channelDivinityTurnUndead,"channelDivinityTurnUndead"),__name(channelDivinityTurnUndead,"channelDivinityTurnUndead");function kiEmptyBody(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.KiEmptyBody.name"),description:game.i18n.localize("ConvenientEffects.Dnd.KiEmptyBody.description"),img:"icons/magic/perception/silhouette-stealth-shadow.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[...invisible().changes??[],addDamageResistance({damageType:"bludgeoning"}),addDamageResistance({damageType:"piercing"}),addDamageResistance({damageType:"slashing"}),addDamageResistance({damageType:"acid"}),addDamageResistance({damageType:"cold"}),addDamageResistance({damageType:"fire"}),addDamageResistance({damageType:"lightning"}),addDamageResistance({damageType:"necrotic"}),addDamageResistance({damageType:"poison"}),addDamageResistance({damageType:"psychic"}),addDamageResistance({damageType:"radiant"}),addDamageResistance({damageType:"slashing"}),addDamageResistance({damageType:"thunder"})]}})}__name2(kiEmptyBody,"kiEmptyBody"),__name(kiEmptyBody,"kiEmptyBody");function kiPatientDefense(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.KiPatientDefense.name"),description:game.i18n.localize("ConvenientEffects.Dnd.KiPatientDefense.description"),img:"icons/magic/defensive/shield-barrier-glowing-blue.webp",flags:{dae:{specialDuration:["turnStart"]}},changes:[grantDisadvantageAttack({attackType:"all"}),advantageAbilitySave({saveType:"dex"})]}})}__name2(kiPatientDefense,"kiPatientDefense"),__name(kiPatientDefense,"kiPatientDefense");function rage(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Rage.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Rage.description"),img:"icons/creatures/abilities/mouth-teeth-human.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[advantageAbilityCheck({abilityCheckType:"str"}),advantageAbilitySave({saveType:"str"}),addDamageResistance({damageType:"slashing"}),addDamageResistance({damageType:"piercing"}),addDamageResistance({damageType:"bludgeoning"}),damageBonus({damageType:"mwak",value:"+ @scale.barbarian.rage-damage"}),tokenMagic({value:"outline"})]},isDynamic:!0})}__name2(rage,"rage"),__name(rage,"rage");function recklessAttack(){const subEffectIds=[recklessAttackAdvantage()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RecklessAttack.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RecklessAttack.description"),img:"icons/skills/melee/blade-tips-triple-bent-white.webp",flags:{dae:{specialDuration:["turnStart"]}},changes:[grantAdvantageAttack({attackType:"all"})]},subEffectIds})}__name2(recklessAttack,"recklessAttack"),__name(recklessAttack,"recklessAttack");function recklessAttackAdvantage(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RecklessAttackAdvantageOnAttacks.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RecklessAttackAdvantageOnAttacks.description"),img:"icons/skills/melee/blade-tips-triple-bent-white.webp",duration:{turns:1},changes:[advantageAttack({attackType:"mwak"})]},isViewable:!1})}__name2(recklessAttackAdvantage,"recklessAttackAdvantage"),__name(recklessAttackAdvantage,"recklessAttackAdvantage");function equipment(){return{itemData:{name:game.i18n.localize("ConvenientEffects.Dnd.Folders.Equipment")},effects:[bullseyeLantern(),candle(),hoodedLantern(),lantern(),torch()]}}__name2(equipment,"equipment"),__name(equipment,"equipment");function bullseyeLantern(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BullseyeLantern.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BullseyeLantern.description"),img:"icons/sundries/lights/lantern-iron-yellow.webp",duration:{seconds:SECONDS.IN_SIX_HOURS},changes:[atlLight({lightType:"angle",value:"60"}),atlLight({lightType:"dim",value:"120"}),atlLight({lightType:"bright",value:"60"}),atlLight({lightType:"color",value:COLORS.FIRE}),atlLight({lightType:"alpha",value:"0.4"}),atlLight({lightType:"animation",value:'{"type": "torch","speed": 1,"intensity": 1}'})]}})}__name2(bullseyeLantern,"bullseyeLantern"),__name(bullseyeLantern,"bullseyeLantern");function candle(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Candle.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Candle.description"),img:"icons/sundries/lights/candle-unlit-white.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[atlLight({lightType:"dim",value:"10"}),atlLight({lightType:"bright",value:"5"}),atlLight({lightType:"color",value:COLORS.FIRE}),atlLight({lightType:"alpha",value:"0.2"}),atlLight({lightType:"animation",value:'{"type": "torch","speed": 1,"intensity": 1}'})]}})}__name2(candle,"candle"),__name(candle,"candle");function hoodedLantern(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HoodedLantern.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HoodedLantern.description"),img:"icons/sundries/lights/lantern-iron-yellow.webp",duration:{seconds:SECONDS.IN_SIX_HOURS},changes:[atlLight({lightType:"dim",value:"5"}),atlLight({lightType:"bright",value:"0"}),atlLight({lightType:"color",value:COLORS.FIRE}),atlLight({lightType:"alpha",value:"0.4"}),atlLight({lightType:"animation",value:'{"type": "torch","speed": 1,"intensity": 1}'})]}})}__name2(hoodedLantern,"hoodedLantern"),__name(hoodedLantern,"hoodedLantern");function lantern(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Lantern.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Lantern.description"),img:"icons/sundries/lights/lantern-iron-yellow.webp",duration:{seconds:SECONDS.IN_SIX_HOURS},changes:[atlLight({lightType:"dim",value:"60"}),atlLight({lightType:"bright",value:"30"}),atlLight({lightType:"color",value:COLORS.FIRE}),atlLight({lightType:"alpha",value:"0.4"}),atlLight({lightType:"animation",value:'{"type": "torch","speed": 1,"intensity": 1}'})]}})}__name2(lantern,"lantern"),__name(lantern,"lantern");function torch(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Torch.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Torch.description"),img:"icons/sundries/lights/torch-black.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[atlLight({lightType:"dim",value:"40"}),atlLight({lightType:"bright",value:"20"}),atlLight({lightType:"color",value:COLORS.FIRE}),atlLight({lightType:"alpha",value:"0.4"}),atlLight({lightType:"animation",value:'{"type": "torch","speed": 1,"intensity": 1}'})]}})}__name2(torch,"torch"),__name(torch,"torch");function addAbility({ability,value,priority}){return{key:`system.abilities.${ability}.value`,mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(addAbility,"addAbility"),__name(addAbility,"addAbility");function downgradeAbility({ability,value,priority}){return{key:`system.abilities.${ability}.value`,mode:CONST.ACTIVE_EFFECT_MODES.DOWNGRADE,value,priority}}__name2(downgradeAbility,"downgradeAbility"),__name(downgradeAbility,"downgradeAbility");function upgradeAbility({ability,value,priority}){return{key:`system.abilities.${ability}.value`,mode:CONST.ACTIVE_EFFECT_MODES.UPGRADE,value,priority}}__name2(upgradeAbility,"upgradeAbility"),__name(upgradeAbility,"upgradeAbility");function abilitySaveBonus({ability,value,priority}){return{key:`system.abilities.${ability}.bonuses.save`,mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(abilitySaveBonus,"abilitySaveBonus"),__name(abilitySaveBonus,"abilitySaveBonus");function magicItems(){return{itemData:{name:game.i18n.localize("ConvenientEffects.Dnd.Folders.MagicItems")},effects:[amuletOfHealth(),beltOfDwarvenkind(),beltOfGiantStrength(),beltOfHillGiantStrength(),beltOfFrostGiantStrength(),beltOfStoneGiantStrength(),beltOfFireGiantStrength(),beltOfCloudGiantStrength(),beltOfStormGiantStrength(),bootsOfElvenkind(),bootsOfTheWinterlands(),bracersOfArchery(),bracersOfDefense(),broochOfShielding(),cloakOfDisplacement(),cloakOfElvenkind(),cloakOfProtection(),cloakOfTheMantaRay(),eyesOfTheEagle(),gauntletsOfOgrePower(),gogglesOfNight(),headbandOfIntellect(),robeOfEyes(),robeOfStars(),robeOfTheArchmagi(),mantleOfSpellResistance(),periaptOfHealth(),periaptOfProofAgainstPoison(),stoneOfGoodLuck(),ringOfFreeAction(),ringOfResistance(),ringOfAcidResistance(),ringOfColdResistance(),ringOfFireResistance(),ringOfForceResistance(),ringOfLightningResistance(),ringOfNecroticResistance(),ringOfPoisonResistance(),ringOfPsychicResistance(),ringOfRadiantResistance(),ringOfThunderResistance(),ringOfSwimming(),ringOfWarmth()]}}__name2(magicItems,"magicItems"),__name(magicItems,"magicItems");function amuletOfHealth(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.AmuletOfHealth.name"),description:game.i18n.localize("ConvenientEffects.Dnd.AmuletOfHealth.description"),img:"icons/equipment/neck/pendant-faceted-red.webp",changes:[upgradeAbility({ability:"con",value:"19"})]},isTemporary:!1})}__name2(amuletOfHealth,"amuletOfHealth"),__name(amuletOfHealth,"amuletOfHealth");function beltOfDwarvenkind(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfDwarvenkind.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfDwarvenkind.description"),img:"icons/equipment/waist/belt-armored-steel.webp",changes:[addDamageResistance({damageType:"poison"}),upgradeDarkvision({value:"60",priority:5}),atlSightRange({value:"60",priority:5}),atlSightVisionMode({value:"darkvision",priority:5}),addLanguage({language:"dwarvish"}),addAbility({ability:"con",value:"2",priority:5}),downgradeAbility({ability:"con",value:"20",priority:50})]},isTemporary:!1})}__name2(beltOfDwarvenkind,"beltOfDwarvenkind"),__name(beltOfDwarvenkind,"beltOfDwarvenkind");function beltOfGiantStrength(){const nestedEffectIds=[beltOfHillGiantStrength(),beltOfStoneGiantStrength(),beltOfFrostGiantStrength(),beltOfFireGiantStrength(),beltOfCloudGiantStrength(),beltOfStormGiantStrength()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfGiantStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfGiantStrength.description"),img:"icons/equipment/waist/belt-armored-steel.webp"},nestedEffectIds,isTemporary:!1})}__name2(beltOfGiantStrength,"beltOfGiantStrength"),__name(beltOfGiantStrength,"beltOfGiantStrength");function beltOfHillGiantStrength(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfHillGiantStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfHillGiantStrength.description"),img:"icons/equipment/waist/belt-buckle-square-leather-brown.webp",changes:[upgradeAbility({ability:"str",value:"21"})]},isTemporary:!1})}__name2(beltOfHillGiantStrength,"beltOfHillGiantStrength"),__name(beltOfHillGiantStrength,"beltOfHillGiantStrength");function beltOfStoneGiantStrength(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfStoneGiantStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfStoneGiantStrength.description"),img:"icons/equipment/waist/belt-armored-steel.webp",changes:[upgradeAbility({ability:"str",value:"23"})]},isTemporary:!1})}__name2(beltOfStoneGiantStrength,"beltOfStoneGiantStrength"),__name(beltOfStoneGiantStrength,"beltOfStoneGiantStrength");function beltOfFrostGiantStrength(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfFrostGiantStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfFrostGiantStrength.description"),img:"icons/equipment/waist/cloth-sash-purple.webp",changes:[upgradeAbility({ability:"str",value:"23"})]},isTemporary:!1})}__name2(beltOfFrostGiantStrength,"beltOfFrostGiantStrength"),__name(beltOfFrostGiantStrength,"beltOfFrostGiantStrength");function beltOfFireGiantStrength(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfFireGiantStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfFireGiantStrength.description"),img:"icons/equipment/waist/belt-coiled-leather-steel.webp",changes:[upgradeAbility({ability:"str",value:"25"})]},isTemporary:!1})}__name2(beltOfFireGiantStrength,"beltOfFireGiantStrength"),__name(beltOfFireGiantStrength,"beltOfFireGiantStrength");function beltOfCloudGiantStrength(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfCloudGiantStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfCloudGiantStrength.description"),img:"icons/equipment/waist/belt-thick-gemmed-steel-grey.webp",changes:[upgradeAbility({ability:"str",value:"27"})]},isTemporary:!1})}__name2(beltOfCloudGiantStrength,"beltOfCloudGiantStrength"),__name(beltOfCloudGiantStrength,"beltOfCloudGiantStrength");function beltOfStormGiantStrength(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeltOfStormGiantStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeltOfStormGiantStrength.description"),img:"icons/equipment/waist/sash-cloth-gold-purple.webp",changes:[upgradeAbility({ability:"str",value:"29"})]},isTemporary:!1})}__name2(beltOfStormGiantStrength,"beltOfStormGiantStrength"),__name(beltOfStormGiantStrength,"beltOfStormGiantStrength");function bootsOfElvenkind(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BootsOfElvenkind.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BootsOfElvenkind.description"),img:"icons/equipment/feet/boots-pointed-cloth-green.webp",changes:[advantageSkill({skillType:"ste"})]},isTemporary:!1})}__name2(bootsOfElvenkind,"bootsOfElvenkind"),__name(bootsOfElvenkind,"bootsOfElvenkind");function bootsOfTheWinterlands(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BootsOfTheWinterlands.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BootsOfTheWinterlands.description"),img:"icons/equipment/feet/boots-leather-banded-furred.webp",changes:[addDamageResistance({damageType:"cold"})]},isTemporary:!1})}__name2(bootsOfTheWinterlands,"bootsOfTheWinterlands"),__name(bootsOfTheWinterlands,"bootsOfTheWinterlands");function bracersOfArchery(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BracersOfArchery.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BracersOfArchery.description"),img:"icons/equipment/wrist/bracer-banded-leather.webp",changes:[damageBonus({damageType:"rwak",value:"2"}),addWeaponProficiency({weapon:"longbow"}),addWeaponProficiency({weapon:"shortbow"})]},isTemporary:!1})}__name2(bracersOfArchery,"bracersOfArchery"),__name(bracersOfArchery,"bracersOfArchery");function bracersOfDefense(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BracersOfDefense.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BracersOfDefense.description"),img:"icons/equipment/wrist/bracer-yellow-fancy.webp",changes:[acBonus({value:"2"})]},isTemporary:!1})}__name2(bracersOfDefense,"bracersOfDefense"),__name(bracersOfDefense,"bracersOfDefense");function broochOfShielding(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BroochOfShielding.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BroochOfShielding.description"),img:"icons/equipment/neck/pendant-bronze-gem-blue.webp",changes:[addDamageResistance({damageType:"force"})]},isTemporary:!1})}__name2(broochOfShielding,"broochOfShielding"),__name(broochOfShielding,"broochOfShielding");function cloakOfDisplacement(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CloakOfDisplacement.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CloakOfDisplacement.description"),img:"icons/equipment/back/cloak-brown-accent-brown-layered-collared-fur.webp",changes:[grantDisadvantageAttack({attackType:"all"})]},isTemporary:!1})}__name2(cloakOfDisplacement,"cloakOfDisplacement"),__name(cloakOfDisplacement,"cloakOfDisplacement");function cloakOfElvenkind(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CloakOfElvenkind.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CloakOfElvenkind.description"),img:"icons/equipment/back/cloak-collared-feathers-green.webp",changes:[advantageSkill({skillType:"ste"})]},isTemporary:!1})}__name2(cloakOfElvenkind,"cloakOfElvenkind"),__name(cloakOfElvenkind,"cloakOfElvenkind");function cloakOfProtection(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CloakOfProtection.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CloakOfProtection.description"),img:"icons/equipment/back/cloak-heavy-fur-blue.webp",changes:[acBonus({value:"+1"}),saveBonus({value:"+1"})]},isTemporary:!1})}__name2(cloakOfProtection,"cloakOfProtection"),__name(cloakOfProtection,"cloakOfProtection");function cloakOfTheMantaRay(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CloakOfTheMantaRay.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CloakOfTheMantaRay.description"),img:"icons/equipment/head/hood-cloth-teal-gold.webp",changes:[upgradeMovement({movementType:"swim",value:"60"})]},isTemporary:!1})}__name2(cloakOfTheMantaRay,"cloakOfTheMantaRay"),__name(cloakOfTheMantaRay,"cloakOfTheMantaRay");function ringOfResistance(){const nestedEffectIds=[ringOfAcidResistance(),ringOfColdResistance(),ringOfFireResistance(),ringOfForceResistance(),ringOfLightningResistance(),ringOfNecroticResistance(),ringOfPoisonResistance(),ringOfPsychicResistance(),ringOfRadiantResistance(),ringOfThunderResistance()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfResistance.description"),img:"icons/equipment/finger/ring-faceted-silver-orange.webp"},nestedEffectIds,isTemporary:!1})}__name2(ringOfResistance,"ringOfResistance"),__name(ringOfResistance,"ringOfResistance");function ringOfAcidResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfAcidResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfAcidResistance.description"),img:"icons/equipment/finger/ring-band-engraved-scrolls-silver.webp",changes:[addDamageResistance({damageType:"acid"})]},isTemporary:!1})}__name2(ringOfAcidResistance,"ringOfAcidResistance"),__name(ringOfAcidResistance,"ringOfAcidResistance");function ringOfColdResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfColdResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfColdResistance.description"),img:"icons/equipment/finger/ring-faceted-silver-orange.webp",changes:[addDamageResistance({damageType:"cold"})]},isTemporary:!1})}__name2(ringOfColdResistance,"ringOfColdResistance"),__name(ringOfColdResistance,"ringOfColdResistance");function ringOfFireResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfFireResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfFireResistance.description"),img:"icons/equipment/finger/ring-cabochon-gold-orange.webp",changes:[addDamageResistance({damageType:"fire"})]},isTemporary:!1})}__name2(ringOfFireResistance,"ringOfFireResistance"),__name(ringOfFireResistance,"ringOfFireResistance");function ringOfForceResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfForceResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfForceResistance.description"),img:"icons/equipment/finger/ring-faceted-gold-purple.webp",changes:[addDamageResistance({damageType:"force"})]},isTemporary:!1})}__name2(ringOfForceResistance,"ringOfForceResistance"),__name(ringOfForceResistance,"ringOfForceResistance");function ringOfLightningResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfLightningResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfLightningResistance.description"),img:"icons/equipment/finger/ring-cabochon-gold-orange.webp",changes:[addDamageResistance({damageType:"lightning"})]},isTemporary:!1})}__name2(ringOfLightningResistance,"ringOfLightningResistance"),__name(ringOfLightningResistance,"ringOfLightningResistance");function ringOfNecroticResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfNecroticResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfNecroticResistance.description"),img:"icons/equipment/finger/ring-band-engraved-scrolls-silver.webp",changes:[addDamageResistance({damageType:"necrotic"})]},isTemporary:!1})}__name2(ringOfNecroticResistance,"ringOfNecroticResistance"),__name(ringOfNecroticResistance,"ringOfNecroticResistance");function ringOfPoisonResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfPoisonResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfPoisonResistance.description"),img:"icons/equipment/finger/ring-faceted-gold-purple.webp",changes:[addDamageResistance({damageType:"poison"})]},isTemporary:!1})}__name2(ringOfPoisonResistance,"ringOfPoisonResistance"),__name(ringOfPoisonResistance,"ringOfPoisonResistance");function ringOfPsychicResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfPsychicResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfPsychicResistance.description"),img:"icons/equipment/finger/ring-cabochon-notched-gold-green.webp",changes:[addDamageResistance({damageType:"psychic"})]},isTemporary:!1})}__name2(ringOfPsychicResistance,"ringOfPsychicResistance"),__name(ringOfPsychicResistance,"ringOfPsychicResistance");function ringOfRadiantResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfRadiantResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfRadiantResistance.description"),img:"icons/equipment/finger/ring-inlay-red.webp",changes:[addDamageResistance({damageType:"radiant"})]},isTemporary:!1})}__name2(ringOfRadiantResistance,"ringOfRadiantResistance"),__name(ringOfRadiantResistance,"ringOfRadiantResistance");function ringOfThunderResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfThunderResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfThunderResistance.description"),img:"icons/equipment/finger/ring-faceted-silver-orange.webp",changes:[addDamageResistance({damageType:"thunder"})]},isTemporary:!1})}__name2(ringOfThunderResistance,"ringOfThunderResistance"),__name(ringOfThunderResistance,"ringOfThunderResistance");function eyesOfTheEagle(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.EyesOfTheEagle.name"),description:game.i18n.localize("ConvenientEffects.Dnd.EyesOfTheEagle.description"),img:"icons/equipment/head/goggles-leather-blue.webp",changes:[advantageSkill({skillType:"prc"})]},isTemporary:!1})}__name2(eyesOfTheEagle,"eyesOfTheEagle"),__name(eyesOfTheEagle,"eyesOfTheEagle");function gauntletsOfOgrePower(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.GauntletsOfOgrePower.name"),description:game.i18n.localize("ConvenientEffects.Dnd.GauntletsOfOgrePower.description"),img:"icons/equipment/hand/gauntlet-armored-steel-grey.webp",changes:[upgradeAbility({ability:"str",value:"19"})]},isTemporary:!1})}__name2(gauntletsOfOgrePower,"gauntletsOfOgrePower"),__name(gauntletsOfOgrePower,"gauntletsOfOgrePower");function gogglesOfNight(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.GogglesOfNight.name"),description:game.i18n.localize("ConvenientEffects.Dnd.GogglesOfNight.description"),img:"icons/equipment/head/goggles-leather-blue.webp",changes:[addDarkvision({value:"60"})]},isTemporary:!1})}__name2(gogglesOfNight,"gogglesOfNight"),__name(gogglesOfNight,"gogglesOfNight");function headbandOfIntellect(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HeadbandOfIntellect.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HeadbandOfIntellect.description"),img:"icons/equipment/finger/ring-cabochon-silver-gold-red.webp",changes:[upgradeAbility({ability:"int",value:"19"})]},isTemporary:!1})}__name2(headbandOfIntellect,"headbandOfIntellect"),__name(headbandOfIntellect,"headbandOfIntellect");function robeOfEyes(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RobeOfEyes.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RobeOfEyes.description"),img:"icons/equipment/head/hood-red.webp",changes:[advantageSkill({skillType:"prc"}),upgradeDarkvision({value:"120"}),upgradeTrueSight({value:"120"})]},isTemporary:!1})}__name2(robeOfEyes,"robeOfEyes"),__name(robeOfEyes,"robeOfEyes");function robeOfStars(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RobeOfStars.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RobeOfStars.description"),img:"icons/equipment/back/cloak-plain-blue.webp",changes:[saveBonus({value:"+1"})]},isTemporary:!1})}__name2(robeOfStars,"robeOfStars"),__name(robeOfStars,"robeOfStars");function robeOfTheArchmagi(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RobeOfTheArchmagi.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RobeOfTheArchmagi.description"),img:"icons/equipment/back/cloak-plain-white.webp",changes:[acCalc({value:"custom"}),acFormula({value:"15 + @abilities.dex.mod"}),magicResistanceSaves(),attackBonus({attackType:"spell",value:"+2"}),spellDcBonus({value:"+2"})]},isTemporary:!1})}__name2(robeOfTheArchmagi,"robeOfTheArchmagi"),__name(robeOfTheArchmagi,"robeOfTheArchmagi");function mantleOfSpellResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.MantleOfSpellResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.MantleOfSpellResistance.description"),img:"icons/equipment/back/cape-layered-violet-white-swirl.webp",changes:[magicResistanceSaves()]},isTemporary:!1})}__name2(mantleOfSpellResistance,"mantleOfSpellResistance"),__name(mantleOfSpellResistance,"mantleOfSpellResistance");function periaptOfHealth(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.PeriaptOfHealth.name"),description:game.i18n.localize("ConvenientEffects.Dnd.PeriaptOfHealth.description"),img:"icons/equipment/neck/pendant-faceted-red.webp",changes:[addConditionImmunity({condition:"diseased"})]},isTemporary:!1})}__name2(periaptOfHealth,"periaptOfHealth"),__name(periaptOfHealth,"periaptOfHealth");function periaptOfProofAgainstPoison(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.PeriaptOfProofAgainstPoison.name"),description:game.i18n.localize("ConvenientEffects.Dnd.PeriaptOfProofAgainstPoison.description"),img:"icons/equipment/neck/necklace-hook-brown.webp",changes:[addConditionImmunity({condition:"poisoned"}),addDamageImmunity({damageType:"poison"})]},isTemporary:!1})}__name2(periaptOfProofAgainstPoison,"periaptOfProofAgainstPoison"),__name(periaptOfProofAgainstPoison,"periaptOfProofAgainstPoison");function stoneOfGoodLuck(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.StoneOfGoodLuck.name"),description:game.i18n.localize("ConvenientEffects.Dnd.StoneOfGoodLuck.description"),img:"icons/commodities/gems/gem-rough-rectangle-red.webp",changes:[saveBonus({value:"+1"}),checkBonus({value:"+1"})]},isTemporary:!1})}__name2(stoneOfGoodLuck,"stoneOfGoodLuck"),__name(stoneOfGoodLuck,"stoneOfGoodLuck");function ringOfFreeAction(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfFreeAction.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfFreeAction.description"),img:"icons/equipment/finger/ring-cabochon-notched-gold-green.webp",changes:[addConditionImmunity({condition:"paralyzed"}),addConditionImmunity({condition:"restrained"})]},isTemporary:!1})}__name2(ringOfFreeAction,"ringOfFreeAction"),__name(ringOfFreeAction,"ringOfFreeAction");function ringOfSwimming(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfSwimming.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfSwimming.description"),img:"icons/equipment/finger/ring-cabochon-notched-gold-green.webp",changes:[upgradeMovement({movementType:"swim",value:"40"})]},isTemporary:!1})}__name2(ringOfSwimming,"ringOfSwimming"),__name(ringOfSwimming,"ringOfSwimming");function ringOfWarmth(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RingOfWarmth.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RingOfWarmth.description"),img:"icons/equipment/finger/ring-cabochon-gold-orange.webp",changes:[addDamageResistance({damageType:"cold"})]},isTemporary:!1})}__name2(ringOfWarmth,"ringOfWarmth"),__name(ringOfWarmth,"ringOfWarmth");function other(){return{itemData:{name:game.i18n.localize("ConvenientEffects.Dnd.Folders.Other")},effects:[bonusAction(),coverHalf(),coverThreeQuarters(),coverTotal(),encumbered(),dodge(),flanked(),flanking(),greatWeaponMaster(),heavilyEncumbered(),inspiration(),rangedDisadvantage(),reaction(),ready(),sharpshooter()]}}__name2(other,"other"),__name(other,"other");function bonusAction(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BonusAction.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BonusAction.description"),img:"modules/dfreds-convenient-effects/images/bonus-action.svg",flags:{dae:{specialDuration:["turnStart","shortRest","longRest"]}}}})}__name2(bonusAction,"bonusAction"),__name(bonusAction,"bonusAction");function coverHalf(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CoverHalf.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CoverHalf.description"),img:"modules/dfreds-convenient-effects/images/broken-wall.svg",tint:"#dae34f",changes:[acCover({value:"+2"}),abilitySaveBonus({ability:"dex",value:"+2"})]}})}__name2(coverHalf,"coverHalf"),__name(coverHalf,"coverHalf");function coverThreeQuarters(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CoverThreeQuarters.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CoverThreeQuarters.description"),img:"modules/dfreds-convenient-effects/images/brick-wall.svg",changes:[acCover({value:"+5"}),abilitySaveBonus({ability:"dex",value:"+5"})]}})}__name2(coverThreeQuarters,"coverThreeQuarters"),__name(coverThreeQuarters,"coverThreeQuarters");function coverTotal(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CoverTotal.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CoverTotal.description"),img:"modules/dfreds-convenient-effects/images/castle.svg",changes:[grantFailAttack({attackType:"all"})]}})}__name2(coverTotal,"coverTotal"),__name(coverTotal,"coverTotal");function encumbered(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Encumbered.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Encumbered.description"),img:"icons/svg/down.svg",statuses:["encumbered"],changes:[movement({movementType:"all",value:"-10",priority:25})]}})}__name2(encumbered,"encumbered"),__name(encumbered,"encumbered");function dodge(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Dodge.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Dodge.description"),img:"modules/dfreds-convenient-effects/images/dodging.svg",statuses:["dodging"],flags:{dae:{specialDuration:["turnStart"]}},changes:[grantDisadvantageAttack({attackType:"all"}),advantageAbilitySave({saveType:"dex"}),tokenMagic({value:"Evade Stance"})]}})}__name2(dodge,"dodge"),__name(dodge,"dodge");function flanked(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Flanked.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Flanked.description"),img:"modules/dfreds-convenient-effects/images/encirclement.svg",changes:[grantAdvantageAttack({attackType:"mwak"}),grantAdvantageAttack({attackType:"msak"})]}})}__name2(flanked,"flanked"),__name(flanked,"flanked");function flanking(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Flanking.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Flanking.description"),img:"icons/svg/sword.svg",changes:[advantageAttack({attackType:"mwak"}),advantageAttack({attackType:"msak"})]}})}__name2(flanking,"flanking"),__name(flanking,"flanking");function greatWeaponMaster(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.GreatWeaponMaster.name"),description:game.i18n.localize("ConvenientEffects.Dnd.GreatWeaponMaster.description"),img:"icons/skills/melee/hand-grip-staff-yellow-brown.webp",changes:[attackBonus({attackType:"mwak",value:"-5"}),damageBonus({damageType:"mwak",value:"+10"})]}})}__name2(greatWeaponMaster,"greatWeaponMaster"),__name(greatWeaponMaster,"greatWeaponMaster");function heavilyEncumbered(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HeavilyEncumbered.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HeavilyEncumbered.description"),img:"icons/svg/downgrade.svg",statuses:["heavilyEncumbered"],changes:[movement({movementType:"all",value:"-20",priority:25}),disadvantageAttack({attackType:"all"}),disadvantageAbilitySave({saveType:"str"}),disadvantageAbilitySave({saveType:"dex"}),disadvantageAbilitySave({saveType:"con"})]}})}__name2(heavilyEncumbered,"heavilyEncumbered"),__name(heavilyEncumbered,"heavilyEncumbered");function inspiration(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Inspiration.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Inspiration.description"),img:"icons/magic/control/buff-luck-fortune-green.webp",flags:{dae:{specialDuration:["1Action","isSave","isCheck","isSkill"]}},changes:[advantage()]}})}__name2(inspiration,"inspiration"),__name(inspiration,"inspiration");function rangedDisadvantage(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RangedDisadvantage.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RangedDisadvantage.description"),img:"modules/dfreds-convenient-effects/images/broken-arrow.svg",changes:[disadvantageAttack({attackType:"rwak"}),disadvantageAttack({attackType:"rsak"})]}})}__name2(rangedDisadvantage,"rangedDisadvantage"),__name(rangedDisadvantage,"rangedDisadvantage");function reaction(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Reaction.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Reaction.description"),img:"modules/dfreds-convenient-effects/images/reaction.svg",flags:{dae:{specialDuration:["turnStart","shortRest","longRest"]}}}})}__name2(reaction,"reaction"),__name(reaction,"reaction");function ready(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Ready.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Ready.description"),img:"modules/dfreds-convenient-effects/images/ready.svg",flags:{dae:{specialDuration:["turnStart"]}}}})}__name2(ready,"ready"),__name(ready,"ready");function sharpshooter(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Sharpshooter.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Sharpshooter.description"),img:"icons/weapons/bows/shortbow-recurve-yellow.webp",changes:[attackBonus({attackType:"rwak",value:"-5"}),damageBonus({damageType:"rwak",value:"+10"})]}})}__name2(sharpshooter,"sharpshooter"),__name(sharpshooter,"sharpshooter");function skillCheckBonus({skillType,value,priority}){return{key:`system.skills.${skillType}.bonuses.check`,mode:CONST.ACTIVE_EFFECT_MODES.ADD,value,priority}}__name2(skillCheckBonus,"skillCheckBonus"),__name(skillCheckBonus,"skillCheckBonus");function spells(){return{itemData:{name:game.i18n.localize("ConvenientEffects.Dnd.Folders.Spells")},effects:[acidArrow(),aid(),alterSelf(),antilifeShell(),arcaneHand(),bane(),barkskin(),beaconOfHope(),blackTentacles(),bless(),blindnessDeafness(),blindnessDeafnessBlindness(),blindnessDeafnessDeafness(),blur(),charmPerson(),command(),comprehendLanguages(),contagion(),contagionBlindingSickness(),contagionFilthFever(),contagionFleshRot(),contagionMindfire(),contagionSeizure(),contagionSlimyDoom(),darkvision(),disguiseSelf(),divineFavor(),divineWord(),enlargeReduce(),enlargeReduceEnlarge(),enlargeReduceReduce(),enhanceAbility(),enhanceAbilityBearsEndurance(),enhanceAbilityBullsStrength(),enhanceAbilityCatsGrace(),enhanceAbilityEaglesSplendor(),enhanceAbilityFoxsCunning(),enhanceAbilityOwlsWisdom(),faerieFire(),falseLife(),featherFall(),feeblemind(),fireShield(),fireShieldColdResistance(),fireShieldFireResistance(),findThePath(),fly(),foresight(),freedomOfMovement(),globeOfInvulnerability(),greaterInvisibility(),guidance(),guidingBolt(),haste(),heroesFeast(),heroism(),hideousLaughter(),holdMonster(),holdPerson(),holyAura(),huntersMark(),invisibility(),irresistibleDance(),jump(),light(),longstrider(),mageArmor(),mindBlank(),mirrorImage(),passWithoutTrace(),protectionFromEnergy(),protectionFromEnergyAcid(),protectionFromEnergyCold(),protectionFromEnergyFire(),protectionFromEnergyLightning(),protectionFromEnergyThunder(),protectionFromPoison(),protectionFromEvilAndGood(),rayOfFrost(),regenerate(),resilientSphere(),resistance(),shield(),shieldOfFaith(),slow(),speakWithAnimals(),speakWithDead(),speakWithPlants(),spiderClimb(),spiritGuardians(),spiritualWeapon(),stoneskin(),suggestion(),telekinesis(),trueStrike(),viciousMockery(),wardingBond(),waterBreathing(),waterWalk()]}}__name2(spells,"spells"),__name(spells,"spells");function acidArrow(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.AcidArrow.name"),description:game.i18n.localize("ConvenientEffects.Dnd.AcidArrow.description"),img:"icons/magic/acid/projectile-bolts-salvo-green.webp",changes:[{key:"flags.midi-qol.OverTime",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"turn=end,removeCondition=true,damageRoll=2d4,damageType=acid,label=Acid Arrow"}]}})}__name2(acidArrow,"acidArrow"),__name(acidArrow,"acidArrow");function aid(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Aid.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Aid.description"),img:"icons/magic/life/heart-cross-blue.webp",duration:{seconds:SECONDS.IN_EIGHT_HOURS}}})}__name2(aid,"aid"),__name(aid,"aid");function alterSelf(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.AlterSelf.name"),description:game.i18n.localize("ConvenientEffects.Dnd.AlterSelf.description"),img:"icons/magic/control/debuff-energy-hold-green.webp",duration:{seconds:SECONDS.IN_ONE_HOUR}}})}__name2(alterSelf,"alterSelf"),__name(alterSelf,"alterSelf");function antilifeShell(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.AntilifeShell.name"),description:game.i18n.localize("ConvenientEffects.Dnd.AntilifeShell.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-teal.webp",duration:{seconds:SECONDS.IN_ONE_HOUR}}})}__name2(antilifeShell,"antilifeShell"),__name(antilifeShell,"antilifeShell");function arcaneHand(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ArcaneHand.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ArcaneHand.description"),img:"icons/magic/fire/projectile-fireball-smoke-strong-teal.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE}}})}__name2(arcaneHand,"arcaneHand"),__name(arcaneHand,"arcaneHand");function bane(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Bane.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Bane.description"),img:"icons/magic/unholy/strike-beam-blood-red-purple.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[saveBonus({value:"-1d4"}),attackBonus({attackType:"mwak",value:"-1d4"}),attackBonus({attackType:"msak",value:"-1d4"}),attackBonus({attackType:"rsak",value:"-1d4"}),attackBonus({attackType:"rwak",value:"-1d4"})]}})}__name2(bane,"bane"),__name(bane,"bane");function barkskin(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Barkskin.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Barkskin.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-orange.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[acFormula({value:"16",priority:50}),acCalc({value:"custom",priority:50})]}})}__name2(barkskin,"barkskin"),__name(barkskin,"barkskin");function beaconOfHope(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BeaconOfHope.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BeaconOfHope.description"),img:"icons/magic/light/explosion-star-large-blue-yellow.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[advantageAbilitySave({saveType:"wis"}),advantageDeathSave()]}})}__name2(beaconOfHope,"beaconOfHope"),__name(beaconOfHope,"beaconOfHope");function blackTentacles(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BlackTentacles.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BlackTentacles.description"),img:"icons/magic/nature/vines-thorned-curled-glow-teal-purple.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:restrained().changes}})}__name2(blackTentacles,"blackTentacles"),__name(blackTentacles,"blackTentacles");function bless(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Bless.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Bless.description"),img:"icons/magic/control/buff-flight-wings-blue.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[saveBonus({value:"+1d4"}),attackBonus({attackType:"msak",value:"+1d4"}),attackBonus({attackType:"mwak",value:"+1d4"}),attackBonus({attackType:"rsak",value:"+1d4"}),attackBonus({attackType:"rwak",value:"+1d4"}),tokenMagic({value:"bloom"})]}})}__name2(bless,"bless"),__name(bless,"bless");function blindnessDeafness(){const nestedEffectIds=[blindnessDeafnessBlindness(),blindnessDeafnessDeafness()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BlindnessDeafness.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BlindnessDeafness.description"),img:"icons/magic/perception/eye-ringed-glow-angry-red.webp"},nestedEffectIds})}__name2(blindnessDeafness,"blindnessDeafness"),__name(blindnessDeafness,"blindnessDeafness");function blindnessDeafnessBlindness(){const subEffectIds=[Flags.getCeEffectId(blinded())].filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Blindness.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Blindness.description"),img:"icons/magic/perception/eye-ringed-glow-angry-red.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE}},subEffectIds})}__name2(blindnessDeafnessBlindness,"blindnessDeafnessBlindness"),__name(blindnessDeafnessBlindness,"blindnessDeafnessBlindness");function blindnessDeafnessDeafness(){const subEffectIds=[Flags.getCeEffectId(deafened())].filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Deafness.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Deafness.description"),img:"icons/magic/perception/eye-ringed-glow-angry-red.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE}},subEffectIds})}__name2(blindnessDeafnessDeafness,"blindnessDeafnessDeafness"),__name(blindnessDeafnessDeafness,"blindnessDeafnessDeafness");function blur(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Blur.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Blur.description"),img:"icons/magic/air/air-burst-spiral-blue-gray.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[grantDisadvantageAttack({attackType:"all"}),tokenMagic({value:"blur"})]}})}__name2(blur,"blur"),__name(blur,"blur");function charmPerson(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CharmPerson.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CharmPerson.description"),img:"icons/magic/fire/explosion-fireball-medium-purple-pink.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:charmed().changes}})}__name2(charmPerson,"charmPerson"),__name(charmPerson,"charmPerson");function command(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Command.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Command.description"),img:"icons/magic/fire/explosion-fireball-small-purple.webp",duration:{seconds:SECONDS.IN_ONE_ROUND_DND5E,turns:1}}})}__name2(command,"command"),__name(command,"command");function comprehendLanguages(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ComprehendLanguages.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ComprehendLanguages.description"),img:"icons/magic/symbols/runes-triangle-orange-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addAllLanguages()]}})}__name2(comprehendLanguages,"comprehendLanguages"),__name(comprehendLanguages,"comprehendLanguages");function contagion(){const nestedEffectIds=[contagionBlindingSickness(),contagionFilthFever(),contagionFleshRot(),contagionMindfire(),contagionSeizure(),contagionSlimyDoom()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Contagion.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Contagion.description"),img:"icons/magic/unholy/strike-beam-blood-large-red-purple.webp"},nestedEffectIds})}__name2(contagion,"contagion"),__name(contagion,"contagion");function contagionBlindingSickness(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BlindingSickness.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BlindingSickness.description"),img:"icons/magic/unholy/strike-beam-blood-large-red-purple.webp",duration:{seconds:SECONDS.IN_ONE_WEEK},changes:[disadvantageAbilitySave({saveType:"wis"}),disadvantageAbilityCheck({abilityCheckType:"wis"}),...blinded().changes??[]]}})}__name2(contagionBlindingSickness,"contagionBlindingSickness"),__name(contagionBlindingSickness,"contagionBlindingSickness");function contagionFilthFever(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FilthFever.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FilthFever.description"),img:"icons/magic/unholy/strike-beam-blood-large-red-purple.webp",duration:{seconds:SECONDS.IN_ONE_WEEK},changes:[disadvantageAbilitySave({saveType:"str"}),disadvantageAbilityCheck({abilityCheckType:"str"}),disadvantageAttack({attackType:"str"})]}})}__name2(contagionFilthFever,"contagionFilthFever"),__name(contagionFilthFever,"contagionFilthFever");function contagionFleshRot(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FleshRot.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FleshRot.description"),img:"icons/magic/unholy/strike-beam-blood-large-red-purple.webp",duration:{seconds:SECONDS.IN_ONE_WEEK},changes:[disadvantageAbilityCheck({abilityCheckType:"cha"}),addAllDamageVulnerability()]}})}__name2(contagionFleshRot,"contagionFleshRot"),__name(contagionFleshRot,"contagionFleshRot");function contagionMindfire(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Mindfire.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Mindfire.description"),img:"icons/magic/unholy/strike-beam-blood-large-red-purple.webp",duration:{seconds:SECONDS.IN_ONE_WEEK},changes:[disadvantageAbilitySave({saveType:"int"}),disadvantageAbilityCheck({abilityCheckType:"int"})]}})}__name2(contagionMindfire,"contagionMindfire"),__name(contagionMindfire,"contagionMindfire");function contagionSeizure(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Seizure.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Seizure.description"),img:"icons/magic/unholy/strike-beam-blood-large-red-purple.webp",duration:{seconds:SECONDS.IN_ONE_WEEK},changes:[disadvantageAbilitySave({saveType:"dex"}),disadvantageAbilityCheck({abilityCheckType:"dex"}),disadvantageAttack({attackType:"dex"})]}})}__name2(contagionSeizure,"contagionSeizure"),__name(contagionSeizure,"contagionSeizure");function contagionSlimyDoom(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.SlimyDoom.name"),description:game.i18n.localize("ConvenientEffects.Dnd.SlimyDoom.description"),img:"icons/magic/unholy/strike-beam-blood-large-red-purple.webp",duration:{seconds:SECONDS.IN_ONE_WEEK},changes:[disadvantageAbilitySave({saveType:"con"}),disadvantageAbilityCheck({abilityCheckType:"con"})]}})}__name2(contagionSlimyDoom,"contagionSlimyDoom"),__name(contagionSlimyDoom,"contagionSlimyDoom");function darkvision(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Darkvision.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Darkvision.description"),img:"icons/magic/perception/eye-ringed-glow-angry-small-red.webp",duration:{seconds:SECONDS.IN_EIGHT_HOURS},changes:[upgradeDarkvision({value:"60",priority:5}),atlSightRange({value:"60",priority:5}),atlSightVisionMode({value:"darkvision",priority:5})]}})}__name2(darkvision,"darkvision"),__name(darkvision,"darkvision");function disguiseSelf(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.DisguiseSelf.name"),description:game.i18n.localize("ConvenientEffects.Dnd.DisguiseSelf.description"),img:"icons/magic/control/debuff-energy-hold-teal-blue.webp",duration:{seconds:SECONDS.IN_ONE_HOUR}}})}__name2(disguiseSelf,"disguiseSelf"),__name(disguiseSelf,"disguiseSelf");function divineFavor(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.DivineFavor.name"),description:game.i18n.localize("ConvenientEffects.Dnd.DivineFavor.description"),img:"icons/magic/fire/dagger-rune-enchant-flame-blue-yellow.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[damageBonus({damageType:"weapon",value:"+1d4[radiant]"})]}})}__name2(divineFavor,"divineFavor"),__name(divineFavor,"divineFavor");function divineWord(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.DivineWord.name"),description:game.i18n.localize("ConvenientEffects.Dnd.DivineWord.description"),img:"icons/magic/light/explosion-star-large-orange-purple.webp"},isDynamic:!0})}__name2(divineWord,"divineWord"),__name(divineWord,"divineWord");function enhanceAbility(){const nestedEffectIds=[enhanceAbilityBearsEndurance(),enhanceAbilityBullsStrength(),enhanceAbilityCatsGrace(),enhanceAbilityEaglesSplendor(),enhanceAbilityFoxsCunning(),enhanceAbilityOwlsWisdom()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.EnhanceAbility.name"),description:game.i18n.localize("ConvenientEffects.Dnd.EnhanceAbility.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp"},nestedEffectIds})}__name2(enhanceAbility,"enhanceAbility"),__name(enhanceAbility,"enhanceAbility");function enhanceAbilityBearsEndurance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BearsEndurance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BearsEndurance.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[advantageAbilityCheck({abilityCheckType:"con"})]}})}__name2(enhanceAbilityBearsEndurance,"enhanceAbilityBearsEndurance"),__name(enhanceAbilityBearsEndurance,"enhanceAbilityBearsEndurance");function enhanceAbilityBullsStrength(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.BullsStrength.name"),description:game.i18n.localize("ConvenientEffects.Dnd.BullsStrength.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[advantageAbilityCheck({abilityCheckType:"str"}),multiplyEncumbrance({value:"2",priority:5})]}})}__name2(enhanceAbilityBullsStrength,"enhanceAbilityBullsStrength"),__name(enhanceAbilityBullsStrength,"enhanceAbilityBullsStrength");function enhanceAbilityCatsGrace(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.CatsGrace.name"),description:game.i18n.localize("ConvenientEffects.Dnd.CatsGrace.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[advantageAbilityCheck({abilityCheckType:"dex"})]}})}__name2(enhanceAbilityCatsGrace,"enhanceAbilityCatsGrace"),__name(enhanceAbilityCatsGrace,"enhanceAbilityCatsGrace");function enhanceAbilityEaglesSplendor(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.EaglesSplendor.name"),description:game.i18n.localize("ConvenientEffects.Dnd.EaglesSplendor.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[advantageAbilityCheck({abilityCheckType:"cha"})]}})}__name2(enhanceAbilityEaglesSplendor,"enhanceAbilityEaglesSplendor"),__name(enhanceAbilityEaglesSplendor,"enhanceAbilityEaglesSplendor");function enhanceAbilityFoxsCunning(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FoxsCunning.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FoxsCunning.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[advantageAbilityCheck({abilityCheckType:"int"})]}})}__name2(enhanceAbilityFoxsCunning,"enhanceAbilityFoxsCunning"),__name(enhanceAbilityFoxsCunning,"enhanceAbilityFoxsCunning");function enhanceAbilityOwlsWisdom(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.OwlsWisdom.name"),description:game.i18n.localize("ConvenientEffects.Dnd.OwlsWisdom.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[advantageAbilityCheck({abilityCheckType:"wis"})]}})}__name2(enhanceAbilityOwlsWisdom,"enhanceAbilityOwlsWisdom"),__name(enhanceAbilityOwlsWisdom,"enhanceAbilityOwlsWisdom");function enlargeReduce(){const nestedEffectIds=[enlargeReduceEnlarge(),enlargeReduceReduce()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.EnlargeReduce.name"),description:game.i18n.localize("ConvenientEffects.Dnd.EnlargeReduce.description"),img:"icons/magic/control/energy-stream-link-large-blue.webp"},nestedEffectIds})}__name2(enlargeReduce,"enlargeReduce"),__name(enlargeReduce,"enlargeReduce");function enlargeReduceEnlarge(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Enlarge.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Enlarge.description"),img:"icons/magic/control/energy-stream-link-large-blue.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[damageBonus({damageType:"weapon",value:"+1d4"}),advantageAbilityCheck({abilityCheckType:"str"}),advantageAbilitySave({saveType:"str"})]},isDynamic:!0})}__name2(enlargeReduceEnlarge,"enlargeReduceEnlarge"),__name(enlargeReduceEnlarge,"enlargeReduceEnlarge");function enlargeReduceReduce(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Reduce.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Reduce.description"),img:"icons/magic/control/energy-stream-link-large-blue.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[damageBonus({damageType:"weapon",value:"-1d4"}),disadvantageAbilityCheck({abilityCheckType:"str"}),disadvantageAbilitySave({saveType:"str"})]},isDynamic:!0})}__name2(enlargeReduceReduce,"enlargeReduceReduce"),__name(enlargeReduceReduce,"enlargeReduceReduce");function faerieFire(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FaerieFire.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FaerieFire.description"),img:"icons/magic/fire/projectile-meteor-salvo-strong-teal.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[grantAdvantageAttack({attackType:"all"}),atlLight({lightType:"dim",value:"10"}),atlLight({lightType:"color",value:COLORS.WHITE}),atlLight({lightType:"alpha",value:"0.25"}),atlLight({lightType:"animation",value:'{"type": "pulse","speed": 1,"intensity": 1}'}),tokenMagic({value:"glow"})]}})}__name2(faerieFire,"faerieFire"),__name(faerieFire,"faerieFire");function falseLife(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FalseLife.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FalseLife.description"),img:"icons/magic/life/heart-cross-purple-orange.webp",duration:{seconds:SECONDS.IN_ONE_HOUR}}})}__name2(falseLife,"falseLife"),__name(falseLife,"falseLife");function featherFall(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FeatherFall.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FeatherFall.description"),img:"icons/magic/air/wind-swirl-pink-purple.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE}}})}__name2(featherFall,"featherFall"),__name(featherFall,"featherFall");function feeblemind(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Feeblemind.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Feeblemind.description"),img:"icons/magic/light/explosion-star-large-teal-purple.webp",changes:[downgradeAbility({ability:"int",value:"1",priority:25}),downgradeAbility({ability:"cha",value:"1",priority:25})]}})}__name2(feeblemind,"feeblemind"),__name(feeblemind,"feeblemind");function fireShield(){const nestedEffectIds=[fireShieldColdResistance(),fireShieldFireResistance()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FireShield.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FireShield.description"),img:"icons/magic/defensive/shield-barrier-flaming-pentagon-red.webp"},nestedEffectIds})}__name2(fireShield,"fireShield"),__name(fireShield,"fireShield");function fireShieldColdResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FireShieldColdResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FireShieldColdResistance.description"),img:"icons/magic/defensive/shield-barrier-flaming-pentagon-red.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[addDamageResistance({damageType:"cold"}),atlLight({lightType:"dim",value:"20"}),atlLight({lightType:"bright",value:"10"}),atlLight({lightType:"color",value:COLORS.FIRE}),atlLight({lightType:"alpha",value:"0.25"}),atlLight({lightType:"animation",value:'{"type": "torch", "speed": 3, "intensity": 1}'}),tokenMagic({value:"fire"})]}})}__name2(fireShieldColdResistance,"fireShieldColdResistance"),__name(fireShieldColdResistance,"fireShieldColdResistance");function fireShieldFireResistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FireShieldFireResistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FireShieldFireResistance.description"),img:"icons/magic/defensive/shield-barrier-flaming-pentagon-blue.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[addDamageResistance({damageType:"fire"}),atlLight({lightType:"dim",value:"20"}),atlLight({lightType:"bright",value:"10"}),atlLight({lightType:"color",value:COLORS.COLD_FIRE}),atlLight({lightType:"alpha",value:"0.25"}),atlLight({lightType:"animation",value:'{"type": "torch", "speed": 3, "intensity": 1}'}),tokenMagic({value:"Fire v2 (coldfire)"})]}})}__name2(fireShieldFireResistance,"fireShieldFireResistance"),__name(fireShieldFireResistance,"fireShieldFireResistance");function findThePath(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FindThePath.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FindThePath.description"),img:"icons/magic/light/explosion-star-teal.webp",duration:{seconds:SECONDS.IN_ONE_DAY}}})}__name2(findThePath,"findThePath"),__name(findThePath,"findThePath");function fly(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Fly.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Fly.description"),img:"icons/magic/control/energy-stream-link-white.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},statuses:["flying"],changes:[upgradeMovement({movementType:"fly",value:"60",priority:25})]}})}__name2(fly,"fly"),__name(fly,"fly");function foresight(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Foresight.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Foresight.description"),img:"icons/magic/perception/eye-ringed-glow-angry-large-teal.webp",duration:{seconds:SECONDS.IN_EIGHT_HOURS},changes:[advantageAttack({attackType:"all"}),advantageAbility({abilityType:"all"}),advantageAbilitySave({saveType:"all"}),initiativeAdv(),grantDisadvantageAttack({attackType:"all"})]}})}__name2(foresight,"foresight"),__name(foresight,"foresight");function freedomOfMovement(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.FreedomOfMovement.name"),description:game.i18n.localize("ConvenientEffects.Dnd.FreedomOfMovement.description"),img:"icons/skills/melee/strike-blade-knife-white-red.webp",duration:{seconds:SECONDS.IN_ONE_HOUR}}})}__name2(freedomOfMovement,"freedomOfMovement"),__name(freedomOfMovement,"freedomOfMovement");function globeOfInvulnerability(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.GlobeOfInvulnerability.name"),description:game.i18n.localize("ConvenientEffects.Dnd.GlobeOfInvulnerability.description"),img:"icons/magic/defensive/shield-barrier-flaming-pentagon-blue.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[tokenMagic({value:"warp-field"})]}})}__name2(globeOfInvulnerability,"globeOfInvulnerability"),__name(globeOfInvulnerability,"globeOfInvulnerability");function greaterInvisibility(){const subEffectIds=[invisible()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.GreaterInvisibility.name"),description:game.i18n.localize("ConvenientEffects.Dnd.GreaterInvisibility.description"),img:"icons/magic/air/fog-gas-smoke-swirling-gray.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},statuses:["invisible"]},subEffectIds})}__name2(greaterInvisibility,"greaterInvisibility"),__name(greaterInvisibility,"greaterInvisibility");function guidance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Guidance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Guidance.description"),img:"icons/magic/control/buff-flight-wings-blue.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[optionalLabel({key:"guidance",label:"Guidance"}),optionalAbilityCheck({key:"guidance",abilityCheckType:"all",value:"+1d4"}),optionalSkill({key:"guidance",skillType:"all",value:"+1d4"})]}})}__name2(guidance,"guidance"),__name(guidance,"guidance");function guidingBolt(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.GuidingBolt.name"),description:game.i18n.localize("ConvenientEffects.Dnd.GuidingBolt.description"),img:"icons/magic/fire/projectile-fireball-smoke-large-blue.webp",duration:{seconds:SECONDS.IN_ONE_ROUND_DND5E,turns:1},flags:{dae:{specialDuration:["isAttacked"]}},changes:[grantAdvantageAttack({attackType:"all"})]}})}__name2(guidingBolt,"guidingBolt"),__name(guidingBolt,"guidingBolt");function haste(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Haste.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Haste.description"),img:"icons/magic/control/buff-flight-wings-runes-purple.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[acBonus({value:"+2"}),advantageAbilitySave({saveType:"dex"}),movement({movementType:"all",value:"*2",priority:25})]}})}__name2(haste,"haste"),__name(haste,"haste");function heroesFeast(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HeroesFeast.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HeroesFeast.description"),img:"icons/magic/life/heart-cross-strong-flame-purple-orange.webp",duration:{seconds:SECONDS.IN_ONE_DAY},changes:[addDamageImmunity({damageType:"poison"}),addConditionImmunity({condition:"frightened"}),advantageAbilitySave({saveType:"wis"})]}})}__name2(heroesFeast,"heroesFeast"),__name(heroesFeast,"heroesFeast");function heroism(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Heroism.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Heroism.description"),img:"icons/magic/life/heart-cross-strong-blue.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[addConditionImmunity({condition:"frightened"})]}})}__name2(heroism,"heroism"),__name(heroism,"heroism");function hideousLaughter(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HideousLaughter.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HideousLaughter.description"),img:"icons/magic/fire/explosion-fireball-medium-purple-pink.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[...incapacitated().changes??[],...prone().changes??[]]}})}__name2(hideousLaughter,"hideousLaughter"),__name(hideousLaughter,"hideousLaughter");function holdMonster(){const subEffectIds=[paralyzed()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HoldMonster.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HoldMonster.description"),img:"icons/magic/control/debuff-chains-ropes-red.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[tokenMagic({value:"mantle-of-madness"})]},subEffectIds})}__name2(holdMonster,"holdMonster"),__name(holdMonster,"holdMonster");function holdPerson(){const subEffectIds=[paralyzed()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HoldPerson.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HoldPerson.description"),img:"icons/magic/control/debuff-chains-ropes-purple.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[tokenMagic({value:"mantle-of-madness"})]},subEffectIds})}__name2(holdPerson,"holdPerson"),__name(holdPerson,"holdPerson");function holyAura(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HolyAura.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HolyAura.description"),img:"icons/magic/control/buff-flight-wings-runes-blue-white.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[advantageAbilitySave({saveType:"all"}),grantDisadvantageAttack({attackType:"all"}),atlLight({lightType:"dim",value:"5"}),atlLight({lightType:"color",value:COLORS.WHITE}),atlLight({lightType:"alpha",value:"0.25"}),atlLight({lightType:"animation",value:'{"type": "sunburst", "speed": 2,"intensity": 4}'})]}})}__name2(holyAura,"holyAura"),__name(holyAura,"holyAura");function huntersMark(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.HuntersMark.name"),description:game.i18n.localize("ConvenientEffects.Dnd.HuntersMark.description"),img:"icons/magic/perception/eye-ringed-glow-angry-small-red.webp"}})}__name2(huntersMark,"huntersMark"),__name(huntersMark,"huntersMark");function invisibility(){const subEffectIds=[invisible()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Invisibility.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Invisibility.description"),img:"icons/magic/air/fog-gas-smoke-dense-gray.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},flags:{dae:{specialDuration:["1Attack","1Spell"]}},statuses:["invisible"]},subEffectIds})}__name2(invisibility,"invisibility"),__name(invisibility,"invisibility");function irresistibleDance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.IrresistibleDance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.IrresistibleDance.description"),img:"icons/magic/control/debuff-chains-ropes-red.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[movement({movementType:"all",value:"0",priority:25}),disadvantageAbilitySave({saveType:"dex"}),disadvantageAttack({attackType:"all"}),grantAdvantageAttack({attackType:"all"})]}})}__name2(irresistibleDance,"irresistibleDance"),__name(irresistibleDance,"irresistibleDance");function jump(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Jump.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Jump.description"),img:"icons/magic/control/debuff-energy-hold-blue-yellow.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE}}})}__name2(jump,"jump"),__name(jump,"jump");function light(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Light.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Light.description"),img:"icons/magic/light/explosion-star-small-blue-yellow.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[atlLight({lightType:"dim",value:"40"}),atlLight({lightType:"bright",value:"20"}),atlLight({lightType:"color",value:COLORS.WHITE}),atlLight({lightType:"alpha",value:"0.25"}),atlLight({lightType:"animation",value:'{"type": "pulse", "speed": 3,"intensity": 1}'})]}})}__name2(light,"light"),__name(light,"light");function longstrider(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Longstrider.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Longstrider.description"),img:"icons/magic/air/wind-stream-blue-gray.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[movement({movementType:"all",value:"+10",priority:25})]}})}__name2(longstrider,"longstrider"),__name(longstrider,"longstrider");function mageArmor(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.MageArmor.name"),description:game.i18n.localize("ConvenientEffects.Dnd.MageArmor.description"),img:"icons/magic/defensive/shield-barrier-glowing-triangle-blue.webp",duration:{seconds:SECONDS.IN_EIGHT_HOURS},changes:[acCalc({value:"mage",priority:5})]}})}__name2(mageArmor,"mageArmor"),__name(mageArmor,"mageArmor");function mindBlank(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.MindBlank.name"),description:game.i18n.localize("ConvenientEffects.Dnd.MindBlank.description"),img:"icons/magic/air/air-burst-spiral-large-blue.webp",duration:{seconds:SECONDS.IN_ONE_DAY},changes:[addDamageImmunity({damageType:"psychic"})]}})}__name2(mindBlank,"mindBlank"),__name(mindBlank,"mindBlank");function mirrorImage(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.MirrorImage.name"),description:game.i18n.localize("ConvenientEffects.Dnd.MirrorImage.description"),img:"icons/magic/control/debuff-energy-hold-levitate-pink.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[tokenMagic({value:"images"})]}})}__name2(mirrorImage,"mirrorImage"),__name(mirrorImage,"mirrorImage");function passWithoutTrace(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.PassWithoutTrace.name"),description:game.i18n.localize("ConvenientEffects.Dnd.PassWithoutTrace.description"),img:"icons/magic/air/fog-gas-smoke-brown.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[skillCheckBonus({skillType:"ste",value:"+10"}),tokenMagic({value:"fog"})]}})}__name2(passWithoutTrace,"passWithoutTrace"),__name(passWithoutTrace,"passWithoutTrace");function protectionFromEnergy(){const nestedEffectIds=[protectionFromEnergyAcid(),protectionFromEnergyCold(),protectionFromEnergyFire(),protectionFromEnergyLightning(),protectionFromEnergyThunder()].map(effect=>Flags.getCeEffectId(effect)).filter(notEmpty);return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromEnergy.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromEnergy.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-teal.webp"},nestedEffectIds})}__name2(protectionFromEnergy,"protectionFromEnergy"),__name(protectionFromEnergy,"protectionFromEnergy");function protectionFromEnergyAcid(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromAcid.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromAcid.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-acid.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addDamageResistance({damageType:"acid"}),tokenMagic({value:"clover"})]}})}__name2(protectionFromEnergyAcid,"protectionFromEnergyAcid"),__name(protectionFromEnergyAcid,"protectionFromEnergyAcid");function protectionFromEnergyCold(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromCold.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromCold.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-blue.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addDamageResistance({damageType:"cold"}),tokenMagic({value:"pure-ice-aura"})]}})}__name2(protectionFromEnergyCold,"protectionFromEnergyCold"),__name(protectionFromEnergyCold,"protectionFromEnergyCold");function protectionFromEnergyFire(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromFire.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromFire.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-red.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addDamageResistance({damageType:"fire"}),tokenMagic({value:"pure-fire-aura"})]}})}__name2(protectionFromEnergyFire,"protectionFromEnergyFire"),__name(protectionFromEnergyFire,"protectionFromEnergyFire");function protectionFromEnergyLightning(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromLightning.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromLightning.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-blue-yellow.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addDamageResistance({damageType:"lightning"}),tokenMagic({value:"electric"})]}})}__name2(protectionFromEnergyLightning,"protectionFromEnergyLightning"),__name(protectionFromEnergyLightning,"protectionFromEnergyLightning");function protectionFromEnergyThunder(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromThunder.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromThunder.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-teal-purple.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addDamageResistance({damageType:"thunder"}),tokenMagic({value:"shockwave"})]}})}__name2(protectionFromEnergyThunder,"protectionFromEnergyThunder"),__name(protectionFromEnergyThunder,"protectionFromEnergyThunder");function protectionFromPoison(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromPoison.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromPoison.description"),img:"icons/magic/defensive/shield-barrier-glowing-triangle-green.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addDamageResistance({damageType:"poison"}),tokenMagic({value:"bevel"})]}})}__name2(protectionFromPoison,"protectionFromPoison"),__name(protectionFromPoison,"protectionFromPoison");function protectionFromEvilAndGood(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromEvilAndGood.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ProtectionFromEvilAndGood.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-blue-yellow.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES}}})}__name2(protectionFromEvilAndGood,"protectionFromEvilAndGood"),__name(protectionFromEvilAndGood,"protectionFromEvilAndGood");function rayOfFrost(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.RayOfFrost.name"),description:game.i18n.localize("ConvenientEffects.Dnd.RayOfFrost.description"),img:"icons/magic/light/beam-rays-blue-small.webp",duration:{seconds:SECONDS.IN_ONE_ROUND_DND5E},changes:[movement({movementType:"all",value:"-10",priority:25})]}})}__name2(rayOfFrost,"rayOfFrost"),__name(rayOfFrost,"rayOfFrost");function regenerate(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Regenerate.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Regenerate.description"),img:"icons/magic/life/heart-cross-strong-flame-green.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[{key:"flags.midi-qol.OverTime.regenerate",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value:"label=Regenerate,turn=start,damageRoll=1,damageType=healing,condition=@attributes.hp.value > 0 && @attributes.hp.value < @attributes.hp.max"}]}})}__name2(regenerate,"regenerate"),__name(regenerate,"regenerate");function resilientSphere(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ResilientSphere.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ResilientSphere.description"),img:"icons/magic/light/explosion-star-large-pink.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[movement({movementType:"all",value:"*0.5",priority:25}),addAllDamageImmunity()]}})}__name2(resilientSphere,"resilientSphere"),__name(resilientSphere,"resilientSphere");function resistance(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Resistance.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Resistance.description"),img:"icons/magic/defensive/shield-barrier-glowing-triangle-orange.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[optionalLabel({key:"resistance",label:"Resistance"}),optionalSave({key:"resistance",saveType:"all",value:"+1d4"})]}})}__name2(resistance,"resistance"),__name(resistance,"resistance");function shield(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Shield.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Shield.description"),img:"icons/magic/defensive/shield-barrier-glowing-triangle-magenta.webp",duration:{seconds:SECONDS.IN_ONE_ROUND_DND5E},flags:{dae:{specialDuration:["turnStart"]}},changes:[acBonus({value:"+5",priority:5}),tokenMagic({value:"water-field"})]}})}__name2(shield,"shield"),__name(shield,"shield");function shieldOfFaith(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ShieldOfFaith.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ShieldOfFaith.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-blue-yellow.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[acBonus({value:"+2"}),tokenMagic({value:"bloom"})]}})}__name2(shieldOfFaith,"shieldOfFaith"),__name(shieldOfFaith,"shieldOfFaith");function slow(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Slow.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Slow.description"),img:"icons/magic/air/fog-gas-smoke-dense-pink.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE},changes:[acBonus({value:"-2"}),abilitySaveBonus({ability:"dex",value:"-2"}),movement({movementType:"all",value:"*0.5",priority:25})]}})}__name2(slow,"slow"),__name(slow,"slow");function speakWithAnimals(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.SpeakWithAnimals.name"),description:game.i18n.localize("ConvenientEffects.Dnd.SpeakWithAnimals.description"),img:"icons/magic/nature/wolf-paw-glow-small-teal-blue.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES}}})}__name2(speakWithAnimals,"speakWithAnimals"),__name(speakWithAnimals,"speakWithAnimals");function speakWithDead(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.SpeakWithDead.name"),description:game.i18n.localize("ConvenientEffects.Dnd.SpeakWithDead.description"),img:"icons/magic/control/fear-fright-shadow-monster-green.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES}}})}__name2(speakWithDead,"speakWithDead"),__name(speakWithDead,"speakWithDead");function speakWithPlants(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.SpeakWithPlants.name"),description:game.i18n.localize("ConvenientEffects.Dnd.SpeakWithPlants.description"),img:"icons/magic/nature/leaf-glow-teal.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES}}})}__name2(speakWithPlants,"speakWithPlants"),__name(speakWithPlants,"speakWithPlants");function spiderClimb(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.SpiderClimb.name"),description:game.i18n.localize("ConvenientEffects.Dnd.SpiderClimb.description"),img:"icons/magic/control/debuff-chains-blue.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES},changes:[upgradeMovement({movementType:"climb",value:"@attributes.movement.walk",priority:25})]}})}__name2(spiderClimb,"spiderClimb"),__name(spiderClimb,"spiderClimb");function spiritGuardians(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.SpiritGuardians.name"),description:game.i18n.localize("ConvenientEffects.Dnd.SpiritGuardians.description"),img:"icons/magic/light/projectile-bolts-salvo-white.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES}}})}__name2(spiritGuardians,"spiritGuardians"),__name(spiritGuardians,"spiritGuardians");function spiritualWeapon(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.SpiritualWeapon.name"),description:game.i18n.localize("ConvenientEffects.Dnd.SpiritualWeapon.description"),img:"icons/magic/fire/dagger-rune-enchant-flame-purple.webp",duration:{seconds:SECONDS.IN_ONE_MINUTE}}})}__name2(spiritualWeapon,"spiritualWeapon"),__name(spiritualWeapon,"spiritualWeapon");function stoneskin(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Stoneskin.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Stoneskin.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-orange.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[addDamageResistance({damageType:"bludgeoning"}),addDamageResistance({damageType:"piercing"}),addDamageResistance({damageType:"slashing"}),tokenMagic({value:"oldfilm"})]}})}__name2(stoneskin,"stoneskin"),__name(stoneskin,"stoneskin");function suggestion(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Suggestion.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Suggestion.description"),img:"icons/magic/air/air-burst-spiral-pink.webp",duration:{seconds:SECONDS.IN_EIGHT_HOURS}}})}__name2(suggestion,"suggestion"),__name(suggestion,"suggestion");function telekinesis(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.Telekinesis.name"),description:game.i18n.localize("ConvenientEffects.Dnd.Telekinesis.description"),img:"icons/magic/control/debuff-energy-hold-levitate-yellow.webp",duration:{seconds:SECONDS.IN_TEN_MINUTES}}})}__name2(telekinesis,"telekinesis"),__name(telekinesis,"telekinesis");function trueStrike(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.TrueStrike.name"),description:game.i18n.localize("ConvenientEffects.Dnd.TrueStrike.description"),img:"icons/magic/fire/dagger-rune-enchant-blue-gray.webp",duration:{seconds:SECONDS.IN_ONE_ROUND_DND5E,turns:1},flags:{dae:{specialDuration:["1Attack"]}},changes:[advantageAttack({attackType:"all"})]}})}__name2(trueStrike,"trueStrike"),__name(trueStrike,"trueStrike");function viciousMockery(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.ViciousMockery.name"),description:game.i18n.localize("ConvenientEffects.Dnd.ViciousMockery.description"),img:"icons/skills/toxins/cup-goblet-poisoned-spilled.webp",duration:{seconds:SECONDS.IN_ONE_ROUND_DND5E,turns:1},flags:{dae:{specialDuration:["1Attack"]}},changes:[disadvantageAttack({attackType:"all"})]}})}__name2(viciousMockery,"viciousMockery"),__name(viciousMockery,"viciousMockery");function wardingBond(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.WardingBond.name"),description:game.i18n.localize("ConvenientEffects.Dnd.WardingBond.description"),img:"icons/magic/defensive/shield-barrier-flaming-diamond-blue-yellow.webp",duration:{seconds:SECONDS.IN_ONE_HOUR},changes:[acBonus({value:"+1"}),saveBonus({value:"+1"}),addAllDamageResistance()]}})}__name2(wardingBond,"wardingBond"),__name(wardingBond,"wardingBond");function waterBreathing(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.WaterBreathing.name"),description:game.i18n.localize("ConvenientEffects.Dnd.WaterBreathing.description"),img:"icons/magic/water/pseudopod-swirl-blue.webp",duration:{seconds:SECONDS.IN_ONE_DAY}}})}__name2(waterBreathing,"waterBreathing"),__name(waterBreathing,"waterBreathing");function waterWalk(){return createConvenientEffect({effect:{name:game.i18n.localize("ConvenientEffects.Dnd.WaterWalk.name"),description:game.i18n.localize("ConvenientEffects.Dnd.WaterWalk.description"),img:"icons/creatures/slimes/slime-movement-swirling-blue.webp",duration:{seconds:SECONDS.IN_ONE_HOUR}}})}__name2(waterWalk,"waterWalk"),__name(waterWalk,"waterWalk");class EffectDefinitionDnd5e extends EffectDefinition{static{__name2(this,"EffectDefinitionDnd5e")}static{__name(this,"EffectDefinitionDnd5e")}systemId="dnd5e";get initialItemEffects(){return[conditions(),spells(),classFeatures(),equipment(),magicItems(),other()]}get migrations(){return[migration]}}class DynamicEffectsHandler{static{__name2(this,"DynamicEffectsHandler")}static{__name(this,"DynamicEffectsHandler")}settings;constructor(){this.settings=new Settings}}class DynamicEffectsHandlerDnd5e extends DynamicEffectsHandler{static{__name2(this,"DynamicEffectsHandlerDnd5e")}static{__name(this,"DynamicEffectsHandlerDnd5e")}systemId="dnd5e";async handleDynamicEffects(effect,actor){if(effect.name)switch(effect.name.toLowerCase()){case game.i18n.localize("ConvenientEffects.Dnd.DivineWord.name").toLowerCase():await this.#addDivineWordEffects(effect,actor);break;case game.i18n.localize("ConvenientEffects.Dnd.Enlarge.name").toLowerCase():this.#addEnlargeEffects(effect,actor);break;case game.i18n.localize("ConvenientEffects.Dnd.Rage.name").toLowerCase():this.#addRageEffects(effect,actor);break;case game.i18n.localize("ConvenientEffects.Dnd.Reduce.name").toLowerCase():this.#addReduceEffects(effect,actor);break}}async#addDivineWordEffects(effect,actor){const remainingHp=actor.system.attributes.hp.value,origin=effect._id;remainingHp<=20?(await actor.update({"system.attributes.hp.value":0}),await game.dfreds.effectInterface.addEffect({effectName:game.i18n.localize("ConvenientEffects.Dnd.Dead.name"),uuid:actor.uuid,overlay:!0}),effect.description=game.i18n.localize("ConvenientEffects.Dnd.DivineWord.dead")):remainingHp<=30?(await game.dfreds.effectInterface.addEffect({effectName:game.i18n.localize("ConvenientEffects.Dnd.Blinded.name"),uuid:actor.uuid,origin}),await game.dfreds.effectInterface.addEffect({effectName:game.i18n.localize("ConvenientEffects.Dnd.Deafened.name"),uuid:actor.uuid,origin}),await game.dfreds.effectInterface.addEffect({effectName:game.i18n.localize("ConvenientEffects.Dnd.Stunned.name"),uuid:actor.uuid,origin}),effect.description=game.i18n.localize("ConvenientEffects.Dnd.DivineWord.stunned"),effect.duration=effect.duration??{},effect.duration.seconds=SECONDS.IN_ONE_HOUR):remainingHp<=40?(await game.dfreds.effectInterface.addEffect({effectName:game.i18n.localize("ConvenientEffects.Dnd.Blinded.name"),uuid:actor.uuid,origin}),await game.dfreds.effectInterface.addEffect({effectName:game.i18n.localize("ConvenientEffects.Dnd.Deafened.name"),uuid:actor.uuid,origin}),effect.description=game.i18n.localize("ConvenientEffects.Dnd.DivineWord.blinded"),effect.duration=effect.duration??{},effect.duration.seconds=SECONDS.IN_TEN_MINUTES):remainingHp<=50&&(await game.dfreds.effectInterface.addEffect({effectName:game.i18n.localize("ConvenientEffects.Dnd.Deafened.name"),uuid:actor.uuid,origin}),effect.description=game.i18n.localize("ConvenientEffects.Dnd.DivineWord.deafened"),effect.duration=effect.duration??{},effect.duration.seconds=SECONDS.IN_ONE_MINUTE)}#addEnlargeEffects(effect,actor){const size=actor.system.traits.size,index=SIZES_ORDERED.indexOf(size);this.#addSizeChangeEffects(effect,Math.min(SIZES_ORDERED.length-1,index+1))}#addReduceEffects(effect,actor){const size=actor.system.traits.size,index=SIZES_ORDERED.indexOf(size);this.#addSizeChangeEffects(effect,Math.max(0,index-1))}#addSizeChangeEffects(effect,sizeIndex){const size=SIZES_ORDERED[sizeIndex],tokenSize=CONFIG.DND5E.actorSizes[size].token??1;effect.changes=effect.changes??[],effect.changes.push({key:"system.traits.size",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value:size},{key:"ATL.width",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value:tokenSize},{key:"ATL.height",mode:CONST.ACTIVE_EFFECT_MODES.OVERRIDE,value:tokenSize})}#addRageEffects(effect,actor){const barbarianClass=actor.items.find(item=>item.type==="class"&&item.name==="Barbarian");if(!barbarianClass){ui.notifications.warn(game.i18n.localize("ConvenientEffects.Dnd.Rage.notABarbarian"));return}this.#addResistancesIfBearTotem(effect,actor,barbarianClass),this.#determineIfPersistentRage(effect,barbarianClass)}#addResistancesIfBearTotem(effect,actor,barbarianClass){const isTotemWarrior=barbarianClass.subclass?.identifier==="path-of-the-totem-warrior",hasBearTotemSpirit=actor.items.find(item=>item.type==="feat"&&item.name===game.i18n.localize("ConvenientEffects.Dnd.Rage.bearTotemFeat"));isTotemWarrior&&hasBearTotemSpirit&&(effect.changes=effect.changes??[],effect.changes.push({key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"acid"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"cold"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"fire"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"force"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"lightning"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"necrotic"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"poison"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"physical"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"radiant"},{key:"system.traits.dr.value",mode:CONST.ACTIVE_EFFECT_MODES.ADD,value:"thunder"}))}#determineIfPersistentRage(effect,barbarianClass){barbarianClass.system.levels>14&&(effect.duration=effect.duration??{},effect.duration.seconds=null,effect.duration.rounds=null,effect.duration.turns=null)}}class Mapping{static{__name2(this,"Mapping")}static{__name(this,"Mapping")}#SYSTEM_DEFINITION_MAP={dnd5e:{effectDefinition:new EffectDefinitionDnd5e,dynamicEffectsHandler:new DynamicEffectsHandlerDnd5e},sw5e:{effectDefinition:new EffectDefinitionDnd5e,dynamicEffectsHandler:new DynamicEffectsHandlerDnd5e}};findSystemDefinitionForSystemId(){log(`System ID is ${game.system.id}`);const systemDefinition=this.#SYSTEM_DEFINITION_MAP[game.system.id];if(!systemDefinition){log(`No system definition available for system ${game.system.id}`);return}return systemDefinition}}const CreateEffects={listen(){Hooks.once(`${MODULE_ID}.createEffects`,async()=>{if(game.user!==game.users.activeGM)return;const systemDefinition=new Mapping().findSystemDefinitionForSystemId();try{await systemDefinition?.effectDefinition?.initialize()}catch(e){ui.notifications.error("Something went wrong while initializing convenient effects"),error(`Error while initializing convenient effects: ${e}`)}})}},CreateItem={listen(){Hooks.on("createItem",(item,_metadata,_userId)=>{const itemType=item;Flags.isConvenient(itemType)&&renderAppIfOpen()})}},DeleteActiveEffect={listen(){Hooks.on("deleteActiveEffect",(activeEffect,_metadata,_userId)=>{const effect=activeEffect;if(Flags.isConvenient(effect)&&effect.parent instanceof Item&&Flags.isConvenient(effect.parent)&&renderAppIfOpen(),game.user===game.users.activeGM&&effect.parent instanceof Actor){const actor=effect.parent,effectIdsFromThisEffect=actor.effects.filter(effect2=>effect2.origin===activeEffect.id).map(effect2=>effect2.id);effectIdsFromThisEffect&&effectIdsFromThisEffect.length>0&&actor.deleteEmbeddedDocuments("ActiveEffect",effectIdsFromThisEffect)}})}},DeleteItem={listen(){Hooks.on("deleteItem",(item,_metadata,_userId)=>{const itemType=item;Flags.isConvenient(itemType)&&renderAppIfOpen()})}},DropActorSheetData={listen(){Hooks.on("dropActorSheetData",(actor,_actorSheet,data)=>{if(!data.effectId)return;const actorData=actor;game.dfreds.effectInterface.addEffect({effectId:data.effectId,uuid:actorData.uuid})})}};async function createMacro(effect,slot){const name=`${game.i18n.localize("ConvenientEffects.ToggleConvenientEffect")} - ${effect.name}`,command2=`game.dfreds.effectInterface.toggleEffect({ effectId: "${Flags.getCeEffectId(effect)}" })`;let macro=game.macros.find(macro2=>macro2.name===name&&macro2.command===command2);macro||(macro=await Macro.create({name,type:"script",img:effect.img,command:command2})),macro&&game.user.assignHotbarMacro(macro,slot)}__name2(createMacro,"createMacro"),__name(createMacro,"createMacro");const HotbarDrop={listen(){Hooks.on("hotbarDrop",async(_bar,data,slot)=>{if(data.type!=="ActiveEffect")return;const effect=await findEffectByUuid(data.uuid);effect&&Flags.isConvenient(effect)&&(delete data.type,createMacro(effect,slot))})}};class HandlebarHelpers{static{__name2(this,"HandlebarHelpers")}static{__name(this,"HandlebarHelpers")}#settings;constructor(){this.#settings=new Settings}register(){this.#registerCanCreateFolders(),this.#registerCanCreateEffects(),this.#registerGetCeEffectId(),this.#registerIsTemporary(),this.#registerIsViewable(),this.#registerIsDynamic(),this.#registerGetFolderColor(),this.#registerConvenientFolderIcons(),this.#registerConvenientEffectIcons()}#registerCanCreateFolders(){Handlebars.registerHelper("canCreateFolders",()=>{const canCreateItems=game.user.hasPermission("ITEM_CREATE"),settingEnabled=game.user.role>=this.#settings.createFoldersPermission;return canCreateItems&&settingEnabled})}#registerCanCreateEffects(){Handlebars.registerHelper("canCreateEffects",folder=>folder.isOwner)}#registerGetCeEffectId(){Handlebars.registerHelper("getCeEffectId",effect=>Flags.getCeEffectId(effect))}#registerIsTemporary(){Handlebars.registerHelper("isTemporary",effect=>Flags.isTemporary(effect))}#registerIsViewable(){Handlebars.registerHelper("isViewable",effect=>Flags.isViewable(effect))}#registerIsDynamic(){Handlebars.registerHelper("isDynamic",effect=>Flags.isDynamic(effect))}#registerGetFolderColor(){Handlebars.registerHelper("getFolderColor",folder=>Flags.getFolderColor(folder))}#registerConvenientFolderIcons(){Handlebars.registerHelper("convenientFolderIcons",folder=>{let icons="";return Flags.isViewable(folder)||(icons+=`
                        <div class="folder-icon">
                            <i class="fas fa-eye-slash" title='${game.i18n.localize("ConvenientEffects.FolderHidden")}'></i>
                        </div>
                        `),icons})}#registerConvenientEffectIcons(){Handlebars.registerHelper("convenientEffectIcons",effect=>{let icons="";const nestedEffects=(Flags.getNestedEffectIds(effect)??[]).map(id2=>game.dfreds.effectInterface.findEffect({effectId:id2})).filter(notEmpty),allChanges=this.#getAllChanges(effect,nestedEffects);return icons+=this.#getPassiveIcon(effect),icons+=this.#getHiddenIcon(effect),icons+=this.#getHasNestedEffectsIcon(nestedEffects),icons+=this.#getIsNestedEffectsIcon(Flags.getCeEffectId(effect),findAllNestedEffectIds({backup:!1})),findModuleById(MODULE_IDS.STATUS_EFFECTS)?.active&&(icons+=this.#getStatusEffectsIcon(effect)),findModuleById(MODULE_IDS.MIDI)?.active&&(icons+=this.#getMidiIcon(allChanges)),findModuleById(MODULE_IDS.ATE)?.active&&(icons+=this.#getAteIcon(allChanges)),findModuleById(MODULE_IDS.TOKEN_MAGIC)?.active&&(icons+=this.#getTokenMagicIcon(allChanges)),icons})}#getAllChanges(effect,nestedEffects){const effectChanges=effect.changes??[],nestedChanges=nestedEffects.flatMap(nestedEffect=>nestedEffect.changes).filter(notEmpty);return[...effectChanges,...nestedChanges]}#getPassiveIcon(effect){return effect.isTemporary?"":`<i class='fas fa-repeat integration-icon' title='${game.i18n.localize("ConvenientEffects.Passive")}'></i>`}#getHiddenIcon(effect){return Flags.isViewable(effect)?"":`<i class='fas fa-eye-slash integration-icon' title='${game.i18n.localize("ConvenientEffects.EffectHidden")}'></i>`}#getHasNestedEffectsIcon(nestedEffects){return nestedEffects&&nestedEffects.length>0?`<i class='fas fa-trees integration-icon' title='${game.i18n.localize("ConvenientEffects.HasNestedEffects")}'></i> `:""}#getIsNestedEffectsIcon(ceEffectId,nestedEffectIds){return ceEffectId&&nestedEffectIds?.includes(ceEffectId)?`<i class='fas fa-tree integration-icon' title='${game.i18n.localize("ConvenientEffects.IsNestedEffect")}'></i> `:""}#getStatusEffectsIcon(effect){return findModuleById(MODULE_IDS.STATUS_EFFECTS)?.api?.findStatusEffect({effectId:Flags.getCeEffectId(effect),effectName:effect.name})?`<i class='fas fa-person-rays integration-icon' title='${game.i18n.localize("ConvenientEffects.StatusEffect")}'></i> `:""}#getMidiIcon(changes){return changes.some(change=>change.key?.startsWith("flags.midi-qol"))?`<i class='fas fa-dice-d20 integration-icon' title='${game.i18n.localize("ConvenientEffects.MidiQolEffects")}'></i> `:""}#getAteIcon(changes){return changes.some(change=>change.key?.startsWith("ATL"))?`<i class='fas fa-lightbulb integration-icon' title='${game.i18n.localize("ConvenientEffects.AtlEffects")}'></i> `:""}#getTokenMagicIcon(changes){return changes.some(change=>change.key?.startsWith("macro.tokenMagic"))?`<i class='fas fa-wand-magic-sparkles integration-icon' title='${game.i18n.localize("ConvenientEffects.TokenMagicEffects")}'></i> `:""}}class Keybindings{static{__name2(this,"Keybindings")}static{__name(this,"Keybindings")}#TOGGLE_CONVENIENT_EFFECTS_APP="toggleConvenientEffectsApp";register(){this.#registerToggleConvenientEffectsApp()}#registerToggleConvenientEffectsApp(){game.keybindings.register(MODULE_ID,this.#TOGGLE_CONVENIENT_EFFECTS_APP,{name:"ConvenientEffects.Keybinding.ToggleAppName",hint:"ConvenientEffects.Keybinding.ToggleAppHint",onDown:__name(async()=>{const ceApp=Object.values(ui.windows).find(app=>app instanceof ConvenientEffectsApp);ceApp?await ceApp.close():new ConvenientEffectsApp().render(!0)},"onDown")})}}const Init={listen(){Hooks.once("init",()=>{CONFIG.debug.hooks=!1,new Settings().register(),new HandlebarHelpers().register(),new Keybindings().register()})}};function updateOldNestedIds(allEffects,oldCeEffectId,newCeEffectId){updateOldCeEffectIds({allEffects,oldCeEffectId,newCeEffectId,flagGetter:__name(effect=>Flags.getNestedEffectIds(effect),"flagGetter"),flagSetter:__name(async(effect,newIds)=>{await Flags.setNestedEffectIds(effect,newIds)},"flagSetter")})}__name2(updateOldNestedIds,"updateOldNestedIds"),__name(updateOldNestedIds,"updateOldNestedIds");function updateOldSubIds(allEffects,oldCeEffectId,newCeEffectId){updateOldCeEffectIds({allEffects,oldCeEffectId,newCeEffectId,flagGetter:__name(effect=>Flags.getSubEffectIds(effect),"flagGetter"),flagSetter:__name(async(effect,newIds)=>{await Flags.setSubEffectIds(effect,newIds)},"flagSetter")})}__name2(updateOldSubIds,"updateOldSubIds"),__name(updateOldSubIds,"updateOldSubIds");function updateOldOtherIds(allEffects,oldCeEffectId,newCeEffectId){updateOldCeEffectIds({allEffects,oldCeEffectId,newCeEffectId,flagGetter:__name(effect=>Flags.getOtherEffectIds(effect),"flagGetter"),flagSetter:__name(async(effect,newIds)=>{await Flags.setOtherEffectIds(effect,newIds)},"flagSetter")})}__name2(updateOldOtherIds,"updateOldOtherIds"),__name(updateOldOtherIds,"updateOldOtherIds");function updateOldCeEffectIds({allEffects,oldCeEffectId,newCeEffectId,flagGetter,flagSetter}){allEffects.filter(effect=>{const ids=flagGetter(effect);return oldCeEffectId&&ids?.includes(oldCeEffectId)}).forEach(async effectWithOldAsNested=>{const ids=flagGetter(effectWithOldAsNested)??[],indexToReplace=ids?.findIndex(effectId=>effectId===oldCeEffectId);if(indexToReplace!==-1){const updatedIds=[...ids];updatedIds.splice(indexToReplace,1,newCeEffectId),await flagSetter(effectWithOldAsNested,updatedIds)}})}__name2(updateOldCeEffectIds,"updateOldCeEffectIds"),__name(updateOldCeEffectIds,"updateOldCeEffectIds");const PreUpdateActiveEffect={listen(){Hooks.on("preUpdateActiveEffect",(activeEffect,data,_metadata,_userId)=>{const effect=activeEffect;if(Flags.isConvenient(effect)&&effect.parent instanceof Item&&Flags.isConvenient(effect.parent)){const effectData=data,oldCeEffectId=Flags.getCeEffectId(activeEffect),newCeEffectId=createCeEffectId(effectData.name??effect.name);if(newCeEffectId===oldCeEffectId)return;Flags.setCeEffectId(effectData,newCeEffectId);const allEffects=findAllEffects({backup:!1});updateOldNestedIds(allEffects,oldCeEffectId,newCeEffectId),updateOldSubIds(allEffects,oldCeEffectId,newCeEffectId),updateOldOtherIds(allEffects,oldCeEffectId,newCeEffectId)}})}};async function getNestedEffectSelection(effectData){const nestedEffects=(Flags.getNestedEffectIds(effectData)??[]).map(id2=>game.dfreds.effectInterface.findEffect({effectId:id2})?.toObject()).filter(notEmpty),content=await renderTemplate("modules/dfreds-convenient-effects/templates/nested-effects-dialog.hbs",{parentEffect:effectData,nestedEffects,default:nestedEffects[0].name}),choice=await Dialog.wait({title:effectData.name,content,default:"ok",close:__name(()=>null,"close"),buttons:{ok:{icon:'<i class="fas fa-check"></i>',label:game.i18n.localize("ConvenientEffects.SelectEffect"),callback:__name(html=>html.find('select[name="effect-choice"]').val(),"callback")}}},{width:300});return nestedEffects.find(nestedEffect=>nestedEffect.name===choice)}__name2(getNestedEffectSelection,"getNestedEffectSelection"),__name(getNestedEffectSelection,"getNestedEffectSelection");class EffectInterface{static{__name2(this,"EffectInterface")}static{__name(this,"EffectInterface")}#settings;constructor(){this.#settings=new Settings}findEffects({backup=!1}={}){return findAllEffects({backup})}findEffect({folderId,effectId,effectName,backup=!1}){const folders=findFolders({backup});if(!folders)return;const matchingEffects=folders.filter(folder=>folderId?folder.id===folderId:!0).flatMap(effectItem=>Array(...effectItem.effects)).map(effect=>effect).filter(effect=>{const isConvenient=Flags.isConvenient(effect),isMatchingId=effect.id===effectId,isMatchingCeId=Flags.getCeEffectId(effect)===effectId,isMatchingName=effect.name===effectName;return isConvenient&&(isMatchingId||isMatchingName||isMatchingCeId)});return matchingEffects.length>1&&log(`Found more than one matching effect for effectId: ${effectId} and effectName: ${effectName}`),matchingEffects[0]}hasEffectApplied({effectId,effectName,uuid}){return findDocumentByUuidSync(uuid)?.effects?.some(effect=>{const isConvenient=Flags.isConvenient(effect),isEnabled=!effect.disabled,isMatchingId=effect.id===effectId,isMatchingName=effect.name===effectName,isMatchingCeId=Flags.getCeEffectId(effect)===effectId;return isConvenient&&isEnabled&&(isMatchingId||isMatchingName||isMatchingCeId)})??!1}async toggleEffect({effectId,effectName,uuids=[],overlay=!1,prioritizeTargets=!1,origin}){let documentUuids=uuids;if(documentUuids.length===0&&(documentUuids=getActorUuids(prioritizeTargets)),documentUuids.length===0){ui.notifications.warn("Please select or target a token to toggle this effect");return}const effectDataToSend=await this.#getEffectDataToSend({effectId,effectName});if(!effectDataToSend){error("Cannot find effect to toggle");return}for(const uuid of documentUuids)this.hasEffectApplied({effectId:effectDataToSend._id??Flags.getCeEffectId(effectDataToSend),effectName:effectDataToSend.name,uuid})?await this.removeEffect({effectId:effectDataToSend._id??Flags.getCeEffectId(effectDataToSend),effectName:effectDataToSend.name,uuid,origin}):await this.addEffect({effectId:effectDataToSend._id??Flags.getCeEffectId(effectDataToSend),effectName:effectDataToSend.name,uuid,overlay,origin})}async addEffect({effectId,effectName,effectData,uuid,overlay=!1,origin}){const effectDataToSend=await this.#getEffectDataToSend({effectId,effectName,effectData});return effectDataToSend?await findDocumentByUuid(uuid)?(foundry.utils.setProperty(effectDataToSend,"flags.core.overlay",overlay),origin&&(effectDataToSend.origin=origin),game.dfreds.sockets.emitAddEffect({effectData:effectDataToSend,uuid})):(error(`Document ${uuid} could not be found`),[]):(error("Cannot find effect to add"),[])}async removeEffect({effectId,effectName,uuid,origin}){const effectDataToSend=await this.#getEffectDataToSend({effectId,effectName});if(!effectDataToSend){error("Cannot find effect to remove");return}if(!await findDocumentByUuid(uuid)){error(`Document ${uuid} could not be found`);return}return game.dfreds.sockets.emitRemoveEffect({effectId:effectDataToSend._id??Flags.getCeEffectId(effectDataToSend),effectName:effectDataToSend.name,uuid,origin})}async createNewEffects({existingFolderId,newFolderData,effectsData}){if(!game.user.isGM)return;if(!existingFolderId&&!newFolderData){error(`Either an existing folder ID or new folder data need to be
                defined to create effects`);return}const newEffectsData=effectsData.map(effect=>createConvenientEffect({effect})),existingFolder=findFolder(existingFolderId??"",{backup:!1});existingFolder?await existingFolder.createEmbeddedDocuments("ActiveEffect",newEffectsData):newFolderData&&await(await Item.create(createConvenientItem({item:newFolderData})))?.createEmbeddedDocuments("ActiveEffect",newEffectsData)}async resetSystemInitialization({confirm=!0}={}){if(!game.user.isGM)return;const folders=findFolders({backup:!1});await Item.deleteDocuments(folders.map(item=>item.id));const backupFolders=findFolders({backup:!0});await Item.deleteDocuments(backupFolders.map(item=>item.id)),await this.#settings.setHasInitialized(!1),await this.#settings.clearRanMigrations(),confirm&&await SettingsConfig.reloadConfirm({world:!1})}async#getEffectDataToSend({effectId,effectName,effectData}){let effectDataToSend=this.findEffect({effectId,effectName})?.toObject()??effectData;if(effectDataToSend){const nestedEffectIds=Flags.getNestedEffectIds(effectDataToSend);nestedEffectIds&&nestedEffectIds.length>0&&(effectDataToSend=await getNestedEffectSelection(effectDataToSend))}return effectDataToSend}}const Ready={listen(){Hooks.once("ready",async()=>{game.dfreds=game.dfreds||{},game.dfreds.effectInterface=new EffectInterface,Hooks.callAll(`${MODULE_ID}.createEffects`)})}};class ConvenientEffectConfig extends FormApplication{static{__name2(this,"ConvenientEffectConfig")}static{__name(this,"ConvenientEffectConfig")}constructor(object,options){super(object,options)}static init(app,html,_data){if(app.document.isOwner||game.user.isGM){const openButton=$(`<a class="header-button control open-convenient-config" title="convenient-config"><i class="fas fa-hand-sparkles"></i> ${game.i18n.localize("ConvenientEffects.ConfigLabel")}</a>`);openButton.click(async _event=>{let convenientConfig=null;const activeEffect=await findEffectByUuid(app.document.uuid);for(const key in app.document.apps){const obj=app.document.apps[key];if(obj instanceof ConvenientEffectConfig){convenientConfig=obj;break}}!convenientConfig&&activeEffect instanceof ActiveEffect&&(convenientConfig=new ConvenientEffectConfig(activeEffect,{})),convenientConfig?.render(!0)}),html.closest(".app").find(".open-convenient-config").remove();const titleElement=html.closest(".app").find(".window-title");openButton.insertAfter(titleElement)}}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"convenient-effect-config",title:"ConvenientEffects.ConfigTitle",popOut:!0,template:"modules/dfreds-convenient-effects/templates/convenient-effect-config.hbs",classes:["sheet"],width:580,height:"auto"})}async getData(options){const context=await super.getData(options),allEffects=findAllEffects({backup:!1}),currentNestedEffectIds=Flags.getNestedEffectIds(this.object),nestedEffectsData=allEffects.map(effect=>{const availableId=Flags.getCeEffectId(effect);return{id:availableId,label:effect.name,selected:currentNestedEffectIds?.some(currentNestedEffectId=>availableId===currentNestedEffectId)?"selected":""}}),currentSubEffectIds=Flags.getSubEffectIds(this.object)??[],subEffectsData=allEffects.map(effect=>{const availableId=Flags.getCeEffectId(effect);return{id:availableId,label:effect.name,selected:currentSubEffectIds.some(currentSubEffectId=>availableId===currentSubEffectId)?"selected":""}}),currentOtherEffectIds=Flags.getOtherEffectIds(this.object)??[],otherEffectsData=allEffects.map(effect=>{const availableId=Flags.getCeEffectId(effect);return{id:availableId,label:effect.name,selected:currentOtherEffectIds.some(currentOtherEffectId=>availableId===currentOtherEffectId)?"selected":""}});return foundry.utils.mergeObject(context,{effect:this.object,nestedEffectsData,subEffectsData,otherEffectsData})}_getSubmitData(updateData){const fd=new FormDataExtended(this.form,{editors:this.editors}),data=foundry.utils.expandObject(fd.object);return updateData&&foundry.utils.mergeObject(data,updateData),Object.hasOwn(data,"temporary")&&Flags.setIsTemporary(data,data.temporary),Object.hasOwn(data,"viewable")&&Flags.setIsViewable(data,data.viewable),data.nestedEffectIds&&data.nestedEffectIds instanceof Array&&Flags.setNestedEffectIds(data,data.nestedEffectIds),data.subEffectIds&&data.subEffectIds instanceof Array&&Flags.setSubEffectIds(data,data.subEffectIds),data.otherEffectIds&&data.otherEffectIds instanceof Array&&Flags.setOtherEffectIds(data,data.otherEffectIds),data}_updateObject(_event,formData){return this.object.update(formData)}}const RenderActiveEffectConfig={listen(){Hooks.on("renderActiveEffectConfig",(activeEffectConfig,html,configData)=>{const config=activeEffectConfig,$html=html,activeEffect=config.document;if(!Flags.isConvenient(activeEffect))return;const parent=activeEffect.parent;parent instanceof Item&&Flags.isConvenient(parent)&&ConvenientEffectConfig.init(activeEffectConfig,$html,configData)})}},RenderItemDirectory={listen(){Hooks.on("renderItemDirectory",directory=>{removeConvenientItemsFromSidebar(directory)})}};let libWrapper;const TGT_SPLIT_RE=new RegExp(`([^.[]+|\\[('([^'\\\\]|\\\\.)+?'|"([^"\\\\]|\\\\.)+?")\\])`,"g"),TGT_CLEANUP_RE=new RegExp(`(^\\['|'\\]$|^\\["|"\\]$)`,"g");Hooks.once("init",()=>{if(globalThis.libWrapper&&!(globalThis.libWrapper.is_fallback??!0)){libWrapper=globalThis.libWrapper;return}libWrapper=class{static{__name2(this,"libWrapper")}static{__name(this,"libWrapper")}static get is_fallback(){return!0}static get WRAPPER(){return"WRAPPER"}static get MIXED(){return"MIXED"}static get OVERRIDE(){return"OVERRIDE"}static register(package_id,target,fn,type="MIXED",{chain=void 0,bind=[]}={}){const is_setter=target.endsWith("#set");target=is_setter?target.slice(0,-4):target;const split=target.match(TGT_SPLIT_RE).map(x=>x.replace(/\\(.)/g,"$1").replace(TGT_CLEANUP_RE,"")),root_nm=split.splice(0,1)[0];let obj,fn_name;if(split.length==0)obj=globalThis,fn_name=root_nm;else{const _eval=eval;fn_name=split.pop(),obj=split.reduce((x,y)=>x[y],globalThis[root_nm]??_eval(root_nm))}let iObj=obj,descriptor=null;for(;iObj&&(descriptor=Object.getOwnPropertyDescriptor(iObj,fn_name),!descriptor);)iObj=Object.getPrototypeOf(iObj);if(!descriptor||descriptor?.configurable===!1)throw new Error(`libWrapper Shim: '${target}' does not exist, could not be found, or has a non-configurable descriptor.`);let original=null;const wrapper=chain??(type.toUpperCase?.()!="OVERRIDE"&&type!=3)?function(...args){return fn.call(this,original.bind(this),...bind,...args)}:function(...args){return fn.call(this,...bind,...args)};if(!is_setter)descriptor.value?(original=descriptor.value,descriptor.value=wrapper):(original=descriptor.get,descriptor.get=wrapper);else{if(!descriptor.set)throw new Error(`libWrapper Shim: '${target}' does not have a setter`);original=descriptor.set,descriptor.set=wrapper}descriptor.configurable=!0,Object.defineProperty(obj,fn_name,descriptor)}};{const[PACKAGE_ID,PACKAGE_TITLE]=(()=>{const match=(import.meta?.url??Error().stack)?.match(/\/(worlds|systems|modules)\/(.+)(?=\/)/i);if(match?.length!==3)return[null,null];const dirs=match[2].split("/");if(match[1]==="worlds")return dirs.find(n=>n&&game.world.id===n)?[game.world.id,game.world.title]:[null,null];if(match[1]==="systems")return dirs.find(n=>n&&game.system.id===n)?[game.system.id,game.system.title??game.system.data.title]:[null,null];const id2=dirs.find(n=>n&&game.modules.has(n)),mdl=game.modules.get(id2);return[id2,mdl?.title??mdl?.data?.title]})();if(!PACKAGE_ID||!PACKAGE_TITLE){console.error("libWrapper Shim: Could not auto-detect package ID and/or title. The libWrapper fallback warning dialog will be disabled.");return}Hooks.once("ready",()=>{const FALLBACK_MESSAGE_TITLE=PACKAGE_TITLE,FALLBACK_MESSAGE=`
				<p><b>'${PACKAGE_TITLE}' depends on the 'libWrapper' module, which is not present.</b></p>
				<p>A fallback implementation will be used, which increases the chance of compatibility issues with other modules.</p>
				<small><p>'libWrapper' is a library which provides package developers with a simple way to modify core Foundry VTT code, while reducing the likelihood of conflict with other packages.</p>
				<p>You can install it from the "Add-on Modules" tab in the <a href="javascript:game.shutDown()">Foundry VTT Setup</a>, from the <a href="https://foundryvtt.com/packages/lib-wrapper">Foundry VTT package repository</a>, or from <a href="https://github.com/ruipin/fvtt-lib-wrapper/">libWrapper's Github page</a>.</p></small>
			`,DONT_REMIND_AGAIN_KEY="libwrapper-dont-remind-again";console.warn(`${PACKAGE_TITLE}: libWrapper not present, using fallback implementation.`),game.settings.register(PACKAGE_ID,DONT_REMIND_AGAIN_KEY,{name:"",default:!1,type:Boolean,scope:"world",config:!1}),game.user.isGM&&!game.settings.get(PACKAGE_ID,DONT_REMIND_AGAIN_KEY)&&new Dialog({title:FALLBACK_MESSAGE_TITLE,content:FALLBACK_MESSAGE,buttons:{ok:{icon:'<i class="fas fa-check"></i>',label:"Understood"},dont_remind:{icon:'<i class="fas fa-times"></i>',label:"Don't remind me again",callback:__name(()=>game.settings.set(PACKAGE_ID,DONT_REMIND_AGAIN_KEY,!0),"callback")}}}).render(!0)})}});const Setup={listen(){Hooks.once("setup",()=>{libWrapper.register(MODULE_ID,"ActiveEffect.prototype.isTemporary",function(wrapped,...args){return wrapped(args)||Flags.isTemporary(this)}),libWrapper.register(MODULE_ID,"Item.prototype.importFromJSON",async function(wrapped,...args){if(!Flags.isConvenient(this)){wrapped(args);return}const[json]=args,item=Item.fromJSON(json).toObject(),convenientItem=createConvenientItem({item});convenientItem.effects=convenientItem.effects?.filter(notEmpty).map(effect=>createConvenientEffect({effect}));const newJson=JSON.stringify(convenientItem,null,2);wrapped([newJson])})})}};class Sockets{static{__name2(this,"Sockets")}static{__name(this,"Sockets")}#socket;constructor(){this.#socket=socketlib.registerModule(MODULE_ID),this.#socket.register("addEffect",this.#onAddEffect.bind(this)),this.#socket.register("removeEffect",this.#onRemoveEffect.bind(this))}async emitAddEffect(message){return this.#socket.executeAsGM("addEffect",message)}async#onAddEffect({effectData,uuid}){const document2=await findDocumentByUuid(uuid),activeEffectsToApply=[effectData];if(!document2)return[];if(Flags.isDynamic(effectData)){const systemDefinition=new Mapping().findSystemDefinitionForSystemId();document2 instanceof Actor&&await systemDefinition?.dynamicEffectsHandler?.handleDynamicEffects(effectData,document2)}const createdEffects=await document2.createEmbeddedDocuments("ActiveEffect",activeEffectsToApply),subEffectIds=Flags.getSubEffectIds(effectData);if(subEffectIds&&subEffectIds.length>0)for(const subEffectId of subEffectIds)await game.dfreds.effectInterface.addEffect({effectId:subEffectId,uuid,origin:createdEffects[0].id});const otherEffectIds=Flags.getOtherEffectIds(effectData);if(otherEffectIds&&otherEffectIds.length>0)for(const otherEffectId of otherEffectIds)await game.dfreds.effectInterface.addEffect({effectId:otherEffectId,uuid});return log(`Added effect ${effectData.name} to ${document2.name} - ${document2.id}`),createdEffects}async emitRemoveEffect(message){return this.#socket.executeAsGM("removeEffect",message)}async#onRemoveEffect({effectId,effectName,uuid,origin}){const document2=await findDocumentByUuid(uuid);if(!document2)return;const effectToRemove=document2.effects.find(activeEffect=>{const isConvenient=Flags.isConvenient(activeEffect),isMatchingId=activeEffect.id===effectId,isMatchingName=activeEffect.name===effectName,isMatchingCeId=Flags.getCeEffectId(activeEffect)===effectId,matches=isConvenient&&(isMatchingId||isMatchingName||isMatchingCeId);return origin?matches&&activeEffect.origin===origin:matches});effectToRemove&&(await effectToRemove.delete(),log(`Removed effect ${effectToRemove.name} from ${document2.name} - ${document2.id}`))}}const SocketlibReady={listen(){Hooks.once("socketlib.ready",()=>{game.dfreds=game.dfreds||{},game.dfreds.sockets=new Sockets})}},UiExtenderInit={listen(){Hooks.once("uiExtender.init",uiExt=>{const uiExtender=uiExt,settings=new Settings;uiExtender.registerSceneControl({moduleId:MODULE_ID,name:"token",predicate:__name(()=>game.user.role>=settings.appControlsPermission,"predicate"),tool:{name:"convenient-effects",title:"ConvenientEffects.AppName",icon:"fas fa-hand-sparkles",toolclip:{src:"modules/dfreds-convenient-effects/images/toolclip-ce.webm",heading:"ConvenientEffects.AppName",items:[{heading:"ConvenientEffects.AppName",reference:"CONTROLS.Click"}]},button:!0,visible:!0,onClick:__name(()=>{new ConvenientEffectsApp().render(!0)},"onClick")}})})}},UpdateActiveEffect={listen(){Hooks.on("updateActiveEffect",(activeEffect,_data,_metadata,_userId)=>{const effect=activeEffect;Flags.isConvenient(effect)&&effect.parent instanceof Item&&Flags.isConvenient(effect.parent)&&renderAppIfOpen()})}},UpdateItem={listen(){Hooks.on("updateItem",(item,_data,_metadata,_userId)=>{const itemType=item;Flags.isConvenient(itemType)&&renderAppIfOpen()})}},HooksCE={listen(){const listeners=[Init,UiExtenderInit,Setup,Ready,SocketlibReady,CreateEffects,CreateItem,UpdateItem,DeleteItem,CreateActiveEffect,PreUpdateActiveEffect,UpdateActiveEffect,DeleteActiveEffect,RenderItemDirectory,ChangeSidebarTab,RenderActiveEffectConfig,CloseActiveEffectConfig,HotbarDrop,DropActorSheetData];for(const listener of listeners)listener.listen()}};HooksCE.listen();
